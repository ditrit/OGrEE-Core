{
	"info": {
		"_postman_id": "d6bc6235-9e5a-4240-8e90-3888ce5ac565",
		"name": "OGrEE-API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "11072305"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "RBAC Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"pm.environment.set(\"AuthToken\", data.account.token);",
									"pm.environment.set(\"UserEmail\", data.account.email);",
									"pm.environment.set(\"UserID\", data.account[\"_id\"]);",
									"tests[\"Successful POST Request\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"admin\",\n    \"password\": \"admin\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "RBAC Create User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"user@test.com\",\n    \"password\": \"secret123\",\n    \"roles\": {\n        \"TenantName\": \"viewer\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/users",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "RBAC Change Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"currentPassword\": \"admin\",\n    \"newPassword\": \"pass123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/users/password/change",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"users",
								"password",
								"change"
							]
						}
					},
					"response": []
				},
				{
					"name": "RBAC Forgot Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"user@test.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/users/password/forgot",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"users",
								"password",
								"forgot"
							]
						}
					},
					"response": []
				},
				{
					"name": "RBAC Reset Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "ResetTokenFromEmail",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"newPassword\": \"321secret\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/users/password/reset",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"users",
								"password",
								"reset"
							]
						}
					},
					"response": []
				},
				{
					"name": "RBAC Get Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"pm.environment.set(\"AuthToken\", data.account.token);",
									"tests[\"Successful POST Request\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/users",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/token/valid",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"token",
								"valid"
							]
						}
					},
					"response": []
				},
				{
					"name": "API Version",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/version",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"version"
							]
						}
					},
					"response": []
				},
				{
					"name": "API Stats",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"tests[\"Successful POST Request\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/stats",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"stats"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Populate DB",
			"item": [
				{
					"name": "Create Domain",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"tests[\"Successful POST Request\"] = responseCode.code === 201;",
									"",
									"pm.environment.set(\"DomainID\", data[\"data\"][\"id\"])",
									"pm.environment.set(\"DomainJSONStr\", JSON.stringify(data));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"DEMO\",\n    \"category\": \"domain\",\n    \"description\": \"This is a demo...\",\n    \"attributes\": {\n        \"color\": \"5BDCFF\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/domains",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"domains"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Create Domain",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/domains/{{DomainID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"domains",
								"{{DomainID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Site",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"tests[\"Successful POST Request\"] = responseCode.code === 201;",
									"",
									"pm.environment.set(\"SiteID\", data[\"data\"][\"id\"])",
									"pm.environment.set(\"SiteJSONStr\", JSON.stringify(data));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"siteA\",\n    \"category\": \"site\",\n    \"description\": \"This is a demo...\",\n    \"domain\": \"DEMO\",\n    \"attributes\": {\n        \"usableColor\": \"5BDCFF\",\n        \"reservedColor\": \"AAAAAA\",\n        \"technicalColor\": \"D0FF78\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/sites",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"sites"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Create Site",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/sites/{{SiteID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"sites",
								"{{SiteID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Building",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"tests[\"Successful POST Request\"] = responseCode.code === 201;",
									"",
									"pm.environment.set(\"BuildingID\", data[\"data\"][\"id\"])",
									"pm.environment.set(\"BldgJSONStr\", JSON.stringify(data[\"building\"]))"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"B\",\n    \"parentId\": \"{{SiteID}}\",\n    \"category\": \"building\",\n    \"description\": \"Building B\",\n    \"domain\": \"DEMO\",\n    \"attributes\": {\n        \"posXY\": [-30.0, 0.0],\n        \"posXYUnit\": \"m\",\n        \"size\": [25.0, 29.399999618530275],\n        \"sizeUnit\": \"m\",\n        \"height\": 0,\n        \"heightUnit\": \"m\",\n        \"rotation\": 30.5\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/buildings",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"buildings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Create Building",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/buildings/{{BuildingID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"buildings",
								"{{BuildingID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Room",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"tests[\"Successful POST Request\"] = responseCode.code === 201;",
									"",
									"pm.environment.set(\"RoomID\", data[\"data\"][\"id\"])",
									"pm.environment.set(\"RoomJSONStr\", JSON.stringify(data[\"data\"]))"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"R1\",\n    \"parentId\": \"{{BuildingID}}\",\n    \"category\": \"room\",\n    \"description\": \"First room\",\n    \"domain\": \"DEMO\",\n    \"attributes\": {\n        \"posXY\": [0.0, 0.0],\n        \"posXYUnit\": \"m\",\n        \"floorUnit\":\"f\",\n        \"orientation\": \"+N+W\",\n        \"size\": [22.799999237060548, 19.799999237060548],\n        \"sizeUnit\": \"m\",\n        \"height\": 3,\n        \"heightUnit\": \"m\",\n        \"axisOrientation\": \"+x+y\",\n        \"rotation\": -90\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/rooms",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"rooms"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Create Room",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/rooms/{{RoomID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"rooms",
								"{{RoomID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create AC",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful POST Request\"] = responseCode.code === 201;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"data\"][\"id\"]",
									"pm.environment.set(\"ACID\", ID)",
									"pm.environment.set(\"ACJSONStr\", JSON.stringify(data[\"data\"]))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"TCL2021\",\n    \"parentId\": \"{{RoomID}}\",\n    \"category\": \"ac\",\n    \"description\": \"TCL\",\n    \"domain\": \"DEMO\",\n    \"attributes\": {\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/acs",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"acs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Create AC",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/acs/{{ACID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"acs",
								"{{ACID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Panel",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful POST Request\"] = responseCode.code === 201;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"data\"][\"id\"]",
									"pm.environment.set(\"PanelID\", ID)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"PanelA\",\n    \"parentId\": \"{{RoomID}}\",\n    \"category\": \"panel\",\n    \"description\": \"YINGLI\",\n    \"domain\": \"DEMO\",\n    \"attributes\": {\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/panels",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"panels"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Create Panel",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET\"] = responseCode.code === 200;",
									"var data =  pm.response.json();"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/panels/{{PanelID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"panels",
								"{{PanelID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Cabinet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful POST Request\"] = responseCode.code === 201;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"data\"][\"id\"]",
									"pm.environment.set(\"CabinetID\", ID)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"CabinetA\",\n    \"domain\": \"DEMO\",\n    \"category\": \"cabinet\",\n    \"parentId\" : \"{{RoomID}}\",\n    \"description\": \"demo\",\n    \"attributes\": {}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/cabinets",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"cabinets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Create Cabinet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET\"] = responseCode.code === 200;",
									"var data =  pm.response.json();"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/cabinets/{{CabinetID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"cabinets",
								"{{CabinetID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Rack",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"tests[\"Successful POST Request\"] = responseCode.code === 201;",
									"",
									"pm.environment.set(\"RackID\", data[\"data\"][\"id\"])",
									"pm.environment.set(\"RackJSONStr\", JSON.stringify(data[\"rack\"]))"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"A01\",\n    \"parentId\": \"{{RoomID}}\",\n    \"category\": \"rack\",\n    \"description\": \"Rack A01\\nThe original one\",\n    \"domain\": \"DEMO\",\n    \"attributes\": {\n        \"posXYZ\": [10.0, 0.0, -2.0],\n        \"posXYUnit\": \"t\",\n        \"size\": [60.0, 120.0],\n        \"sizeUnit\": \"cm\",\n        \"height\": 42,\n        \"heightUnit\": \"U\",\n        \"orientation\": \"front\",\n        \"template\": \"\",\n        \"rotation\": [0, 0, 0]\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/racks",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"racks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Create Rack",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET\"] = responseCode.code === 200;",
									"var data =  pm.response.json();",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/racks/{{RackID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"racks",
								"{{RackID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Corridor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful POST Request\"] = responseCode.code === 201;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"data\"][\"id\"]",
									"pm.environment.set(\"CorridorID\", ID)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"CorridorA\",\n    \"parentId\": \"{{RoomID}}\",\n    \"domain\": \"DEMO\",\n    \"category\": \"corridor\",\n    \"description\": \"demo\",\n    \"attributes\": {\n        \"temperature\": \"warm\",\n        \"content\": \"A01,A01\",\n        \"height\": 3,\n        \"heightUnit\": \"m\",\n        \"rotation\": [0, 0, 0],\n        \"posXYZ\": [10.0, 0.0, -2.0],\n        \"posXYUnit\": \"t\",\n        \"size\": [600.0, 1200.0],\n        \"sizeUnit\": \"cm\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/corridors",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"corridors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Create Corridor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET\"] = responseCode.code === 200;",
									"var data =  pm.response.json();"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\"        : \"AisleA\",\n  \"locationY\"   : \"101,101\",\n  \"orientation\" : \"+N+E\",\n  \"parentId\" : \"{{RoomID}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/corridors/{{CorridorID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"corridors",
								"{{CorridorID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"tests[\"Successful POST Request\"] = responseCode.code === 201;",
									"",
									"pm.environment.set(\"DeviceID\", data[\"data\"][\"id\"])",
									"pm.environment.set(\"DeviceJSONStr\", JSON.stringify(data[\"data\"]))"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"DeviceA\",\n    \"parentId\": \"{{RackID}}\",\n    \"category\": \"device\",\n    \"description\": \"Device test\",\n    \"domain\": \"DEMO\",\n    \"attributes\": {\n        \"posXY\": [10.0, 0.0],\n        \"posXYUnit\": \"tile\",\n        \"posZ\": [10.0, 0.0],\n        \"posZUnit\": \"tile\",\n        \"size\": [60.0, 120.0],\n        \"sizeUnit\": \"cm\",\n        \"height\": 42,\n        \"heightUnit\": \"U\",\n        \"template\": \"Some template\",\n        \"orientation\": \"front\",\n        \"vendor\": \"someVendor\",\n        \"type\": \"someType\",\n        \"model\": \"someModel\",\n        \"serial\": \"someSerial\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/devices",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Create Device",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET\"] = responseCode.code === 200;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/devices/{{DeviceID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"devices",
								"{{DeviceID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Group",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful POST Request\"] = responseCode.code === 201;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"data\"][\"id\"]",
									"pm.environment.set(\"GroupID\", ID)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"GroupA\",\n    \"category\": \"group\",\n    \"parentId\":\"{{RackID}}\",\n    \"description\": \"test\",\n    \"domain\": \"DEMO\",\n    \"attributes\": {\"content\": [\"DeviceA\"]}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/groups",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Create Group",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET\"] = responseCode.code === 200;",
									"var data =  pm.response.json();"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/groups/{{GroupID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"groups",
								"{{GroupID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Room Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful POST Request\"] = responseCode.code === 201;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"data\"][\"slug\"]",
									"pm.environment.set(\"RoomTemplateID\", ID)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"slug\": \"small-room-t\",\n    \"category\": \"room\",\n    \"axisOrientation\": \"+x+y\",\n    \"sizeWDHm\": [\n        9.6,\n        22.8,\n        3\n    ],\n    \"floorUnit\": \"t\",\n    \"technicalArea\": [\n        5,\n        0,\n        0,\n        0\n    ],\n    \"reservedArea\": [\n        3,\n        1,\n        1,\n        3\n    ],\n    \"separators\": {},\n    \"pillars\": {},\n    \"colors\": [],\n    \"tiles\": [],\n    \"rows\": []\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/room_templates",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"room_templates"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Create Room Template",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/room_templates/{{RoomTemplateID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"room_templates",
								"{{RoomTemplateID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Rack Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful POST Request\"] = responseCode.code === 201;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"data\"][\"slug\"]",
									"pm.environment.set(\"RackTemplateID\", ID)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"slug\"        : \"rack1t\",\n  \"description\" : \"Rack Template 1\",\n  \"category\"    : \"rack\",\n  \"sizeWDHmm\"   : [1,2,3],\n  \"fbxModel\"    : \"1\",\n  \"attributes\"  : {\n    \"type\" : \"\"\n  },\n  \"colors\"      : [\n  ],\n  \"components\"  : [\n  ],\n  \"slots\"       : [\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/obj_templates",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"obj_templates"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Create Rack Template",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/obj_templates/{{RackTemplateID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"obj_templates",
								"{{RackTemplateID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Device Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful POST Request\"] = responseCode.code === 201;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"data\"][\"slug\"]",
									"pm.environment.set(\"DeviceTemplateID\", ID)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"slug\": \"ibm-example\",\n    \"description\": \"example\",\n    \"category\": \"device\",\n    \"sizeWDHmm\": [\n        216,\n        659,\n        41\n    ],\n    \"fbxModel\": \"\",\n    \"attributes\": {\n        \"type\": \"blade\",\n        \"vendor\": \"IBM\",\n        \"model\": \"HC1\",\n        \"ram order\": \"8,1,6, / 8,5,5,12,4,13\"\n    },\n    \"colors\": [],\n    \"components\": [\n        {\n            \"location\": \"eth2\",\n            \"type\": \"port\",\n            \"elemOrient\": [0,0,0],\n            \"elemPos\": [\n                104,\n                649,\n                0\n            ],\n            \"elemSize\": [\n                14,\n                11,\n                11\n            ],\n            \"mandatory\": \"yes\",\n            \"labelPos\": \"front\",\n            \"color\": \"ffc0cb\",\n            \"attributes\": {\n                \"factor\": \"rj45\"\n            }\n        }\n    ],\n    \"slots\": [\n        {\n            \"location\": \"cpu1\",\n            \"type\": \"processor\",\n            \"elemOrient\": [0,0,0],\n            \"elemPos\": [\n                68,\n                343,\n                0\n            ],\n            \"elemSize\": [\n                97,\n                97,\n                30\n            ],\n            \"mandatory\": \"yes\",\n            \"labelPos\": \"top\",\n            \"color\": \"ffff00\",\n            \"attributes\": {\n                \"factor\": \"XXXX-R\"\n            }\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/obj_templates",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"obj_templates"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Create Device Template",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/obj_templates/{{DeviceTemplateID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"obj_templates",
								"{{DeviceTemplateID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Stray Device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful POST Request\"] = responseCode.code === 201;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"data\"][\"id\"]",
									"pm.environment.set(\"StrayDevID\", ID)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"StrayDevice1\",\n    \"category\": \"device\",\n    \"description\": \"-3/-5\\nA0-Z9\",\n    \"domain\": \"DEMO\",\n    \"attributes\": {\n        \"posXY\": \"[10.0, 0.0]\",\n        \"posXYUnit\": \"tile\",\n        \"posZ\": \"[10.0, 0.0]\",\n        \"posZUnit\": \"tile\",\n        \"size\": \"[60.0, 120.0]\",\n        \"sizeUnit\": \"cm\",\n        \"height\": \"42\",\n        \"heightUnit\": \"U\",\n        \"heightU\": \"U\",\n        \"template\": \"Some template\",\n        \"orientation\": \"front\",\n        \"vendor\": \"someVendor\",\n        \"type\": \"someType\",\n        \"model\": \"someModel\",\n        \"serial\": \"someSerial\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/stray_objects",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"stray_objects"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Create Stray Device",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/stray_objects/{{StrayDevID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"stray_objects",
								"{{StrayDevID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Generic Obj",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful POST Request\"] = responseCode.code === 201;",
									"",
									"var data = JSON.parse(responseBody)",
									"",
									"var ID = data[\"data\"][\"id\"]",
									"pm.environment.set(\"GenericID\", ID)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n      \"attributes\": {\n        \"height\": 47,\n        \"heightUnit\": \"cm\",\n        \"rotation\": [45, 45, 45],\n        \"posXYZ\": [4.7, -2, 0],\n        \"posXYUnit\": \"m\",\n        \"size\": [80, 80],\n        \"sizeUnit\": \"cm\",\n        \"template\": \"\",\n        \"shape\": \"cube\",\n        \"type\": \"box\"\n      },\n      \"category\": \"generic\",\n      \"description\": \"A box\",\n      \"domain\": \"DEMO\",\n      \"name\": \"GenericA\",\n      \"parentId\": \"{{RoomID}}\"\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/generics",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"generics"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Create Generic Obj",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 200;"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/generics/{{GenericID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"generics",
								"{{GenericID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Tag",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"tests[\"Successful POST Request\"] = responseCode.code === 201;",
									"",
									"var ID = data[\"data\"][\"slug\"]",
									"pm.environment.set(\"TagID\", ID)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"slug\": \"demo\",\n    \"color\": \"5BDCFF\",\n    \"description\": \"demo tag\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/tags",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"tags"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Create Tag",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/tags/{{TagID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"tags",
								"{{TagID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Layer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful POST Request\"] = responseCode.code === 201;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"data\"][\"slug\"]",
									"pm.environment.set(\"LayerID\", ID)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"slug\": \"racks\",\n    \"filter\": \"category = rack\",\n    \"applicability\": \"{{RoomID}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/layers",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"layers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Create Layer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 200;"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/layers/{{LayerID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"layers",
								"{{LayerID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Application",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful POST Request\"] = responseCode.code === 201;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"data\"][\"id\"]",
									"pm.environment.set(\"ApplicationID\", ID)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"domain\": \"DEMO\",\n    \"category\": \"application\",\n    \"attributes\": {\n        \"type\": \"kubernetes\",\n        \"device\": [\n            \"{{DeviceID}}\"\n        ]\n    },\n    \"name\": \"kubernetes-cluster\",\n    \"id\": \"kubernetes-cluster\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/applications",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"applications"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Create Application",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 200;"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/applications/{{ApplicationID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"applications",
								"{{ApplicationID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Update DB",
			"item": [
				{
					"name": "Unlink",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"tests[\"Successful PUT Request\"] = responseCode.code === 200;",
									"",
									"pm.environment.set(\"SiteUpdateStr\", JSON.stringify(JSON.parse(request.data)));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/devices/{{DeviceID}}/unlink",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"devices",
								"{{DeviceID}}",
								"unlink"
							]
						}
					},
					"response": []
				},
				{
					"name": "Link",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"tests[\"Successful PUT Request\"] = responseCode.code === 200;",
									"",
									"pm.environment.set(\"SiteUpdateStr\", JSON.stringify(JSON.parse(request.data)));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"parentId\": \"{{RackID}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/stray_objects/DeviceA/link",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"stray_objects",
								"DeviceA",
								"link"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Site",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"tests[\"Successful PUT Request\"] = responseCode.code === 200;",
									"",
									"pm.environment.set(\"SiteUpdateStr\", JSON.stringify(JSON.parse(request.data)));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"UpdatedSiteA\",\n    \"category\": \"site\",\n    \"description\": \"guess whos back\",\n    \"domain\": \"DEMO\",\n    \"attributes\": {\n        \"orientation\": \"NW\",\n        \"usableColor\": \"999999\",\n        \"reservedColor\": \"999999\",\n        \"technicalColor\": \"999999\",\n        \"address\": \"99\",\n        \"zipcode\": \"99\",\n        \"city\": \"99\",\n        \"country\": \"99\",\n        \"gps\": \"99\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/sites/{{SiteID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"sites",
								"{{SiteID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Update Site",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET\"] = responseCode.code === 200;",
									"var data =  pm.response.json();",
									"var input = JSON.parse(pm.environment.get(\"SiteUpdateStr\"))",
									"",
									"input[\"id\"] = data[\"data\"][\"id\"]",
									"input[\"category\"] = data[\"data\"][\"category\"]",
									"",
									"",
									"function isEqualsJson(obj1, obj2) {",
									"    for (let i in obj2) {",
									"        //console.log(obj2[i])",
									"        //console.log(obj1[i])",
									"        if (obj1[i] !== obj2[i]) {",
									"            console.log(\"Failed at: \", obj1[i])",
									"            ",
									"            for (let idx in obj2[i]) {",
									"                if (obj1[i][idx] !== obj2[i][idx]) {",
									"                    console.log(\"Bad News: \", obj1[i][idx])",
									"                    return false",
									"                }",
									"            }",
									"        }",
									"      }",
									"      return true",
									"}",
									"",
									"",
									"",
									"//console.log(\"Input: \", input)",
									"//onsole.log(\"response: \", data[\"data\"])",
									"",
									"tests[\"Successful Update & Get Request\"] = isEqualsJson(data[\"data\"], input) == true;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"url": {
							"raw": "{{URL}}/api/sites/{{SiteID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"sites",
								"{{SiteID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Building",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"tests[\"Successful PUT Request\"] = responseCode.code === 200;",
									"",
									"pm.environment.set(\"BuildingUpdateStr\", JSON.stringify(JSON.parse(request.data)));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"UpdatedBuilding\",\n    \"parentId\": \"{{SiteID}}\",\n    \"category\": \"building\",\n    \"description\": \"Building B\",\n    \"domain\": \"DEMO\",\n    \"attributes\": {\n        \"posXY\": \"[30.0, 0]\",\n        \"posXYUnit\": \"m\",\n        \"size\": \"[-25.0, -29.399999618530275]\",\n        \"sizeUnit\": \"m\",\n        \"height\": \"0\",\n        \"heightUnit\": \"m\",\n        \"rotation\": \"30\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/buildings/{{BuildingID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"buildings",
								"{{BuildingID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Update Building",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET\"] = responseCode.code === 200;",
									"var data =  pm.response.json();",
									"var input = JSON.parse(pm.environment.get(\"BuildingUpdateStr\"))",
									"",
									"input[\"id\"] = data[\"data\"][\"id\"]",
									"input[\"parentId\"] = data[\"data\"][\"parentId\"]",
									"input[\"category\"] = data[\"data\"][\"category\"]",
									"",
									"",
									"function isEqualsJson(obj1, obj2) {",
									"    for (let i in obj1) {",
									"        //console.log(obj2[i])",
									"        //console.log(obj1[i])",
									"        if (obj1[i] !== obj2[i]) {",
									"            console.log(\"Failed at: \", obj1[i])",
									"            ",
									"            for (let idx in obj1[i]) {",
									"                if (obj1[i][idx] !== obj2[i][idx]) {",
									"                    console.log(\"Bad News: \", obj1[i][idx])",
									"                    return false",
									"                }",
									"            }",
									"        }",
									"      }",
									"      return true",
									"}",
									"",
									"",
									"",
									"//console.log(\"Input: \", input)",
									"//onsole.log(\"response: \", data[\"data\"])",
									"",
									"tests[\"Successful Update & Get Request\"] = isEqualsJson(input, data[\"data\"]) == true;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"url": {
							"raw": "{{URL}}/api/buildings/{{BuildingID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"buildings",
								"{{BuildingID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Room",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"tests[\"Successful PUT Request\"] = responseCode.code === 200;",
									"",
									"pm.environment.set(\"RoomUpdateStr\", JSON.stringify(JSON.parse(request.data)));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"UpdatedR1\",\n    \"parentId\": \"{{BuildingID}}\",\n    \"category\": \"room\",\n    \"description\": \"First room\",\n    \"domain\": \"DEMO\",\n    \"attributes\": {\n        \"posXY\": \"[0, 10.0]\",\n        \"posXYUnit\": \"m\",\n        \"floorUnit\":\"f\",\n        \"size\": \"[-22.799999237060548, 19]\",\n        \"sizeUnit\": \"m\",\n        \"height\": \"3\",\n        \"heightUnit\": \"m\",\n        \"axisOrientation\": \"+x-y\",\n        \"rotation\": \"-90\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/rooms/{{RoomID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"rooms",
								"{{RoomID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Update Room",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET\"] = responseCode.code === 200;",
									"var data =  pm.response.json();",
									"var input = JSON.parse(pm.environment.get(\"RoomUpdateStr\"))",
									"",
									"input[\"id\"] = data[\"data\"][\"id\"]",
									"input[\"parentId\"] = data[\"data\"][\"parentId\"]",
									"input[\"category\"] = data[\"data\"][\"category\"]",
									"",
									"console.log(\"The response: \", data)",
									"console.log(\"The input: \", input)",
									"",
									"function isEqualsJson(obj1, obj2) {",
									"    for (let i in obj1) {",
									"        //console.log(obj2[i])",
									"        //console.log(obj1[i])",
									"        if (obj1[i] !== obj2[i]) {",
									"            console.log(\"Failed at: \", obj1[i])",
									"            ",
									"            for (let idx in obj1[i]) {",
									"                if (obj1[i][idx] !== obj2[i][idx] && obj2[i][idx] !== undefined) {",
									"                    console.log(\"The iter: \", i, \"and the inner: \", idx)",
									"                    console.log(\"Bad News: \", obj1[i][idx])",
									"                    console.log(\"Here is what was already in there: \", i, \" and \", idx)",
									"                    console.log(\"The contents: \", obj2[i][idx])",
									"                    return false",
									"                }",
									"            }",
									"        }",
									"      }",
									"      return true",
									"}",
									"",
									"",
									"",
									"//console.log(\"Input: \", input)",
									"//onsole.log(\"response: \", data[\"data\"])",
									"",
									"tests[\"Successful Update & Get Request\"] = isEqualsJson(input, data[\"data\"]) == true;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"url": {
							"raw": "{{URL}}/api/rooms/{{RoomID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"rooms",
								"{{RoomID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Rack",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"tests[\"Successful PUT Request\"] = responseCode.code === 200;",
									"",
									"pm.environment.set(\"RackUpdateStr\", JSON.stringify(JSON.parse(request.data)));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"UpdatedA01\",\n    \"parentId\": \"{{RoomID}}\",\n    \"category\": \"rack\",\n    \"description\": \"Rack A01 new\",\n    \"domain\": \"DEMO\",\n    \"attributes\": {\n        \"posXYZ\": \"[10.0, 0.0, -2.0]\",\n        \"posXYUnit\": \"m\",\n        \"size\": \"[60.0, 120.0]\",\n        \"sizeUnit\": \"m\",\n        \"height\": \"100\",\n        \"heightUnit\": \"U\",\n        \"orientation\": \"rear\",\n        \"template\": \"\",\n        \"rotation\": \"[0, 0, 0]\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/racks/{{RackID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"racks",
								"{{RackID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Update Rack",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET\"] = responseCode.code === 200;",
									"var data =  pm.response.json();",
									"var input = JSON.parse(pm.environment.get(\"RackUpdateStr\"))",
									"",
									"input[\"id\"] = data[\"data\"][\"id\"]",
									"input[\"parentId\"] = data[\"data\"][\"parentId\"]",
									"input[\"category\"] = data[\"data\"][\"category\"]",
									"",
									"console.log(\"The response: \", data)",
									"console.log(\"The input: \", input)",
									"",
									"function isEqualsJson(obj1, obj2) {",
									"    for (let i in obj1) {",
									"        //console.log(obj2[i])",
									"        //console.log(obj1[i])",
									"        if (obj1[i] !== obj2[i]) {",
									"            console.log(\"Failed at: \", obj1[i])",
									"            ",
									"            for (let idx in obj1[i]) {",
									"                if (obj1[i][idx] !== obj2[i][idx] && (obj2[i][idx] !== undefined && obj2[i][idx] !== \"\")) {",
									"                    console.log(\"The iter: \", i, \"and the inner: \", idx)",
									"                    console.log(\"Bad News: \", obj1[i][idx])",
									"",
									"                    console.log(\"The contents that was already present: \", obj2[i][idx])",
									"                    return false",
									"                }",
									"            }",
									"        }",
									"      }",
									"      return true",
									"}",
									"",
									"",
									"",
									"//console.log(\"Input: \", input)",
									"//onsole.log(\"response: \", data[\"data\"])",
									"",
									"tests[\"Successful Update & Get Request\"] = isEqualsJson(input, data[\"data\"]) == true;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"url": {
							"raw": "{{URL}}/api/racks/{{RackID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"racks",
								"{{RackID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"tests[\"Successful PUT Request\"] = responseCode.code === 200;",
									"",
									"pm.environment.set(\"DeviceUpdateStr\", JSON.stringify(JSON.parse(request.data)));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"UpdatedDeviceA\",\n    \"parentId\": \"{{RackID}}\",\n    \"category\": \"device\",\n    \"description\": \"Device test\",\n    \"domain\": \"DEMO\",\n    \"attributes\": {\n        \"size\": \"[60.0, 120.0]\",\n        \"sizeUnit\": \"cm\",\n        \"height\": \"42\",\n        \"heightUnit\": \"U\",\n        \"template\": \"Some template\",\n        \"orientation\": \"front\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/devices/{{DeviceID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"devices",
								"{{DeviceID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Update Device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET\"] = responseCode.code === 200;",
									"var data =  pm.response.json();",
									"var input = JSON.parse(pm.environment.get(\"DeviceUpdateStr\"))",
									"",
									"input[\"id\"] = data[\"data\"][\"id\"]",
									"input[\"parentId\"] = data[\"data\"][\"parentId\"]",
									"input[\"category\"] = data[\"data\"][\"category\"]",
									"",
									"console.log(\"The response: \", data)",
									"console.log(\"The input: \", input)",
									"",
									"function isEqualsJson(obj1, obj2) {",
									"    for (let i in obj1) {",
									"        //console.log(obj2[i])",
									"        //console.log(obj1[i])",
									"        if (obj1[i] !== obj2[i] && obj2.hasOwnProperty(i) == true) {",
									"            console.log(\"Failed at: \", obj1[i])",
									"            ",
									"            for (let idx in obj1[i]) {",
									"                if (obj1[i][idx] !== obj2[i][idx] && (obj2[i][idx] !== undefined && obj2[i][idx] !== \"\")) {",
									"                    console.log(\"The iter: \", i, \"and the inner: \", idx)",
									"                    console.log(\"Bad News: \", obj1[i][idx])",
									"",
									"                    console.log(\"The contents that was already present: \", obj2[i][idx])",
									"                    return false",
									"                }",
									"            }",
									"        }",
									"      }",
									"      return true",
									"}",
									"",
									"",
									"",
									"//console.log(\"Input: \", input)",
									"//onsole.log(\"response: \", data[\"data\"])",
									"",
									"tests[\"Successful Update & Get Request\"] = isEqualsJson(input, data[\"data\"]) == true;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"url": {
							"raw": "{{URL}}/api/devices/{{DeviceID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"devices",
								"{{DeviceID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update AC",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"tests[\"Successful PUT Request\"] = responseCode.code === 200;",
									"",
									"pm.environment.set(\"ACUpdateStr\", JSON.stringify(JSON.parse(request.data)));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"AquaSky01\",\n    \"parentId\": \"{{RoomID}}\",\n    \"category\": \"ac\",\n    \"description\": \"SPEED\",\n    \"domain\": \"DEMO\",\n    \"attributes\": {\n        \"new\": \"IDX\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/acs/{{ACID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"acs",
								"{{ACID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Update AC",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET\"] = responseCode.code === 200;",
									"var data =  pm.response.json();",
									"var input = JSON.parse(pm.environment.get(\"ACUpdateStr\"))",
									"",
									"input[\"id\"] = data[\"data\"][\"id\"]",
									"input[\"parentId\"] = data[\"data\"][\"parentId\"]",
									"input[\"category\"] = data[\"data\"][\"category\"]",
									"",
									"console.log(\"The response: \", data)",
									"console.log(\"The input: \", input)",
									"",
									"function isEqualsJson(obj1, obj2) {",
									"    for (let i in obj1) {",
									"        //console.log(obj2[i])",
									"        //console.log(obj1[i])",
									"        if (obj1[i] !== obj2[i] && obj2.hasOwnProperty(i) == true) {",
									"            console.log(\"Failed at: \", obj1[i])",
									"            ",
									"            for (let idx in obj1[i]) {",
									"                if (obj1[i][idx] !== obj2[i][idx] && (obj2[i][idx] !== undefined && obj2[i][idx] !== \"\")) {",
									"                    console.log(\"The iter: \", i, \"and the inner: \", idx)",
									"                    console.log(\"Bad News: \", obj1[i][idx])",
									"",
									"                    console.log(\"The contents that was already present: \", obj2[i][idx])",
									"                    return false",
									"                }",
									"            }",
									"        }",
									"      }",
									"      return true",
									"}",
									"",
									"",
									"",
									"//console.log(\"Input: \", input)",
									"//onsole.log(\"response: \", data[\"data\"])",
									"",
									"tests[\"Successful Update & Get Request\"] = isEqualsJson(input, data[\"data\"]) == true;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"url": {
							"raw": "{{URL}}/api/acs/{{ACID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"acs",
								"{{ACID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Panel",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"tests[\"Successful PUT Request\"] = responseCode.code === 200;",
									"",
									"pm.environment.set(\"PanelUpdateStr\", JSON.stringify(JSON.parse(request.data)));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Power_Panel_99\",\n    \"category\": \"SOLARpanel\",\n    \"parentId\": \"{{RoomID}}\",\n    \"description\": \"GRENOBLE DERELICT\",\n    \"domain\": \"DEMO\",\n    \"attributes\": {\n        \"new\": \"IDX\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/panels/{{PanelID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"panels",
								"{{PanelID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Update Panel",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET\"] = responseCode.code === 200;",
									"var data =  pm.response.json();",
									"var input = JSON.parse(pm.environment.get(\"PanelUpdateStr\"))",
									"",
									"input[\"id\"] = data[\"data\"][\"id\"]",
									"input[\"parentId\"] = data[\"data\"][\"parentId\"]",
									"input[\"category\"] = data[\"data\"][\"category\"]",
									"",
									"console.log(\"The response: \", data)",
									"console.log(\"The input: \", input)",
									"",
									"function isEqualsJson(obj1, obj2) {",
									"    for (let i in obj1) {",
									"        //console.log(obj2[i])",
									"        //console.log(obj1[i])",
									"        if (obj1[i] !== obj2[i] && obj2.hasOwnProperty(i) == true) {",
									"            console.log(\"Failed at: \", obj1[i])",
									"            ",
									"            for (let idx in obj1[i]) {",
									"                if (obj1[i][idx] !== obj2[i][idx] && (obj2[i][idx] !== undefined && obj2[i][idx] !== \"\")) {",
									"                    console.log(\"The iter: \", i, \"and the inner: \", idx)",
									"                    console.log(\"Bad News: \", obj1[i][idx])",
									"",
									"                    console.log(\"The contents that was already present: \", obj2[i][idx])",
									"                    return false",
									"                }",
									"            }",
									"        }",
									"      }",
									"      return true",
									"}",
									"",
									"",
									"",
									"//console.log(\"Input: \", input)",
									"//onsole.log(\"response: \", data[\"data\"])",
									"",
									"tests[\"Successful Update & Get Request\"] = isEqualsJson(input, data[\"data\"]) == true;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"url": {
							"raw": "{{URL}}/api/panels/{{PanelID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"panels",
								"{{PanelID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Group",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"tests[\"Successful PUT Request\"] = responseCode.code === 200;",
									"",
									"pm.environment.set(\"GroupUpdateStr\", JSON.stringify(JSON.parse(request.data)));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"UpdatedGroupA\",\n    \"category\": \"group\",\n    \"parentId\":\"{{RackID}}\",\n    \"description\":  \"new\",\n    \"domain\": \"DEMO\",\n    \"attributes\": {\"content\": \"UpdatedDeviceA\"}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/groups/{{GroupID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"groups",
								"{{GroupID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Update Group",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET\"] = responseCode.code === 200;",
									"var data =  pm.response.json();",
									"var input = JSON.parse(pm.environment.get(\"GroupUpdateStr\"))",
									"",
									"input[\"id\"] = data[\"data\"][\"id\"]",
									"input[\"parentId\"] = data[\"data\"][\"parentId\"]",
									"input[\"category\"] = data[\"data\"][\"category\"]",
									"",
									"console.log(\"The response: \", data)",
									"console.log(\"The input: \", input)",
									"",
									"function isEqualsJson(obj1, obj2) {",
									"    for (let i in obj1) {",
									"        //console.log(obj2[i])",
									"        //console.log(obj1[i])",
									"        if (obj1[i] !== obj2[i] && obj2.hasOwnProperty(i) == true) {",
									"            console.log(\"Failed at: \", obj1[i])",
									"            ",
									"            for (let idx in obj1[i]) {",
									"                if (obj1[i][idx] !== obj2[i][idx] && (obj2[i][idx] !== undefined && obj2[i][idx] !== \"\")) {",
									"                    console.log(\"The iter: \", i, \"and the inner: \", idx)",
									"                    console.log(\"Bad News: \", obj1[i][idx])",
									"",
									"                    console.log(\"The contents that was already present: \", obj2[i][idx])",
									"                    return false",
									"                }",
									"            }",
									"        }",
									"      }",
									"      return true",
									"}",
									"",
									"",
									"",
									"//console.log(\"Input: \", input)",
									"//onsole.log(\"response: \", data[\"data\"])",
									"",
									"tests[\"Successful Update & Get Request\"] = isEqualsJson(input, data[\"data\"]) == true;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"url": {
							"raw": "{{URL}}/api/groups/{{GroupID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"groups",
								"{{GroupID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Corridor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"tests[\"Successful PUT Request\"] = responseCode.code === 200;",
									"",
									"pm.environment.set(\"CorridorUpdateStr\", JSON.stringify(JSON.parse(request.data)));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"UpdatedCorridorA\",\n    \"parentId\" : \"{{RoomID}}\",\n    \"domain\": \"DEMO\",\n    \"category\": \"corridor\",\n    \"description\": \"demo\",\n    \"attributes\": {\n        \"temperature\": \"cold\", \n        \"content\": \"UpdatedA01,UpdatedA01\",\n        \"height\": \"3\",\n        \"heightUnit\": \"m\",\n        \"rotation\": \"[0, 0, 0]\",\n        \"posXYZ\": \"[10.0, 0.0, -2.0]\",\n        \"posXYUnit\": \"t\",\n        \"size\": \"[600.0, 1200.0]\",\n        \"sizeUnit\": \"cm\"}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/corridors/{{CorridorID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"corridors",
								"{{CorridorID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Update Corridor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET\"] = responseCode.code === 200;",
									"var data =  pm.response.json();",
									"var input = JSON.parse(pm.environment.get(\"CorridorUpdateStr\"))",
									"",
									"input[\"id\"] = data[\"data\"][\"id\"]",
									"input[\"parentId\"] = data[\"data\"][\"parentId\"]",
									"input[\"category\"] = data[\"data\"][\"category\"]",
									"",
									"console.log(\"The response: \", data)",
									"console.log(\"The input: \", input)",
									"",
									"function isEqualsJson(obj1, obj2) {",
									"    for (let i in obj1) {",
									"        //console.log(obj2[i])",
									"        //console.log(obj1[i])",
									"        if (obj1[i] !== obj2[i] && obj2.hasOwnProperty(i) == true) {",
									"            console.log(\"Failed at: \", obj1[i])",
									"            ",
									"            for (let idx in obj1[i]) {",
									"                if (obj1[i][idx] !== obj2[i][idx] && (obj2[i][idx] !== undefined && obj2[i][idx] !== \"\")) {",
									"                    console.log(\"The iter: \", i, \"and the inner: \", idx)",
									"                    console.log(\"Bad News: \", obj1[i][idx])",
									"",
									"                    console.log(\"The contents that was already present: \", obj2[i][idx])",
									"                    return false",
									"                }",
									"            }",
									"        }",
									"      }",
									"      return true",
									"}",
									"",
									"",
									"",
									"//console.log(\"Input: \", input)",
									"//onsole.log(\"response: \", data[\"data\"])",
									"",
									"tests[\"Successful Update & Get Request\"] = isEqualsJson(input, data[\"data\"]) == true;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"url": {
							"raw": "{{URL}}/api/corridors/{{CorridorID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"corridors",
								"{{CorridorID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Room Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"tests[\"Successful PUT Request\"] = responseCode.code === 200;",
									"",
									"pm.environment.set(\"RoomTemplateUpdateStr\", JSON.stringify(JSON.parse(request.data)));",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"data\"][\"slug\"]",
									"pm.environment.set(\"RoomTemplateID\", ID)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"slug\": \"new-room\",\n    \"category\": \"room\",\n    \"axisOrientation\": \"-x+y\",\n    \"sizeWDHm\": [\n        9.6,\n        22.8,\n        3\n    ],\n    \"floorUnit\": \"m\",\n    \"technicalArea\": [\n        5,\n        0,\n        0,\n        0\n    ],\n    \"reservedArea\": [\n        3,\n        1,\n        1,\n        3\n    ],\n    \"separators\": [\n        {\n            \"endPosXYm\": [\n                3,\n                12\n            ],\n            \"startPosXYm\": [\n                3,\n                0\n            ],\n            \"type\": \"wireframe\"\n        },\n        {\n            \"endPosXYm\": [\n                3,\n                12\n            ],\n            \"startPosXYm\": [\n                0,\n                12\n            ],\n            \"type\": \"plain\"\n        }\n    ],\n    \"pillars\": [\n        {\n            \"centerXY\": [\n                30,\n                2\n            ],\n            \"sizeXY\": [\n                0.3,\n                3\n            ],\n            \"rotation\": 45\n        },\n        {\n            \"centerXY\": [\n                7,\n                7\n            ],\n            \"sizeXY\": [\n                3,\n                0.3\n            ],\n            \"rotation\": 30\n        }\n    ],\n    \"colors\": [],\n    \"tiles\": [],\n    \"rows\": []\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/room_templates/{{RoomTemplateID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"room_templates",
								"{{RoomTemplateID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Update Room Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"url": {
							"raw": "{{URL}}/api/room_templates/{{RoomTemplateID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"room_templates",
								"{{RoomTemplateID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Rack Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"tests[\"Successful PUT Request\"] = responseCode.code === 200;",
									"",
									"pm.environment.set(\"RackTemplateUpdateStr\", JSON.stringify(JSON.parse(request.data)));",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"data\"][\"slug\"]",
									"pm.environment.set(\"RackTemplateID\", ID)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"slug\"        : \"UpdatedRACK1T\",\n  \"description\" : \"New Rack Template 1\",\n  \"category\"    : \"rack\",\n  \"sizeWDHmm\"   : [11,22,33],\n  \"fbxModel\"    : \"1\",\n  \"attributes\"  : {\n    \"type\" : \"\"\n  },\n  \"colors\"      : [\n  ],\n  \"components\"  : [\n  ],\n  \"slots\"       : [\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/obj_templates/{{RackTemplateID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"obj_templates",
								"{{RackTemplateID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Update Rack Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET\"] = responseCode.code === 200;",
									"var data =  pm.response.json();",
									"var input = JSON.parse(pm.environment.get(\"RackTemplateUpdateStr\"))",
									"",
									"input[\"id\"] = data[\"data\"][\"id\"]",
									"input[\"parentId\"] = data[\"data\"][\"parentId\"]",
									"input[\"category\"] = data[\"data\"][\"category\"]",
									"",
									"console.log(\"The response: \", data)",
									"console.log(\"The input: \", input)",
									"",
									"function isEqualsJson(obj1, obj2) {",
									"    for (let i in obj1) {",
									"        //console.log(obj2[i])",
									"        //console.log(obj1[i])",
									"        if (obj1[i] !== obj2[i] && obj2.hasOwnProperty(i) == true) {",
									"            console.log(\"Failed at: \", obj1[i])",
									"            ",
									"            for (let idx in obj1[i]) {",
									"                if (obj1[i][idx] !== obj2[i][idx] && (obj2[i][idx] !== undefined && obj2[i][idx] !== \"\")) {",
									"                    console.log(\"The iter: \", i, \"and the inner: \", idx)",
									"                    console.log(\"Bad News: \", obj1[i][idx])",
									"",
									"                    console.log(\"The contents that was already present: \", obj2[i][idx])",
									"                    return false",
									"                }",
									"            }",
									"        }",
									"      }",
									"      return true",
									"}",
									"",
									"",
									"",
									"//console.log(\"Input: \", input)",
									"//onsole.log(\"response: \", data[\"data\"])",
									"",
									"tests[\"Successful Update & Get Request\"] = isEqualsJson(data[\"data\"], input) == true;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"url": {
							"raw": "{{URL}}/api/obj_templates/{{RackTemplateID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"obj_templates",
								"{{RackTemplateID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Tag",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"tests[\"Successful PUT Request\"] = responseCode.code === 200;",
									"",
									"pm.environment.set(\"TagUpdateStr\", JSON.stringify(JSON.parse(request.data)));",
									"var ID = data[\"data\"][\"slug\"]",
									"pm.environment.set(\"TagID\", ID)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"slug\": \"Tag2\",\n    \"color\": \"5BDCFA\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/tags/{{TagID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"tags",
								"{{TagID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Update Tag",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET\"] = responseCode.code === 200;",
									"var data =  pm.response.json();",
									"var input = JSON.parse(pm.environment.get(\"TagUpdateStr\"))",
									"",
									"console.log(\"The response: \", data)",
									"console.log(\"The input: \", input)",
									"",
									"function isEqualsJson(obj1, obj2) {",
									"    for (let i in obj1) {",
									"        //console.log(obj2[i])",
									"        //console.log(obj1[i])",
									"        if (obj1[i] !== obj2[i] && obj2.hasOwnProperty(i) == true) {",
									"            console.log(\"Failed at: \", obj1[i])",
									"            ",
									"            for (let idx in obj1[i]) {",
									"                if (obj1[i][idx] !== obj2[i][idx] && (obj2[i][idx] !== undefined && obj2[i][idx] !== \"\")) {",
									"                    console.log(\"The iter: \", i, \"and the inner: \", idx)",
									"                    console.log(\"Bad News: \", obj1[i][idx])",
									"",
									"                    console.log(\"The contents that was already present: \", obj2[i][idx])",
									"                    return false",
									"                }",
									"            }",
									"        }",
									"      }",
									"      return true",
									"}",
									"",
									"tests[\"Successful Update & Get Request\"] = isEqualsJson(data[\"data\"], input) == true;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"url": {
							"raw": "{{URL}}/api/tags/{{TagID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"tags",
								"{{TagID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Delete DB",
			"item": [
				{
					"name": "Delete Site & Hierarchy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful DELETE Request\"] = responseCode.code === 204;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"url": {
							"raw": "{{URL}}/api/sites/{{SiteID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"sites",
								"{{SiteID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Domain & Hierarchy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful DELETE Request\"] = responseCode.code === 204;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"url": {
							"raw": "{{URL}}/api/domains/{{DomainID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"domains",
								"{{DomainID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Delete Site",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful DELETE & GET Request\"] = responseCode.code === 404;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"url": {
							"raw": "{{URL}}/api/sites/{{SiteID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"sites",
								"{{SiteID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Delete Building",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful DELETE & GET Request\"] = responseCode.code === 404;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"url": {
							"raw": "{{URL}}/api/buildings/{{BuildingID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"buildings",
								"{{BuildingID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Delete Room",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful DELETE & GET Request\"] = responseCode.code === 404;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"url": {
							"raw": "{{URL}}/api/rooms/{{RoomID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"rooms",
								"{{RoomID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Delete AC",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 404;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"url": {
							"raw": "{{URL}}/api/acs/{{ACID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"acs",
								"{{ACID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Delete Panel",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 404;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"url": {
							"raw": "{{URL}}/api/panels/{{PanelID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"panels",
								"{{PanelID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Delete Cabinet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 404;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"url": {
							"raw": "{{URL}}/api/cabinets/{{CabinetID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"cabinets",
								"{{CabinetID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Delete Corridor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 404;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"url": {
							"raw": "{{URL}}/api/corridors/{{CorridorID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"corridors",
								"{{CorridorID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Delete Rack",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful DELETE & GET Request\"] = responseCode.code === 404;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"url": {
							"raw": "{{URL}}/api/racks/{{RackID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"racks",
								"{{RackID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Delete Group",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 404;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"url": {
							"raw": "{{URL}}/api/groups/{{GroupID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"groups",
								"{{GroupID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Delete Device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful DELETE & GET Request\"] = responseCode.code === 404;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"url": {
							"raw": "{{URL}}/api/devices/{{DeviceID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"devices",
								"{{DeviceID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Room Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful DELETE Request\"] = responseCode.code === 204;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"url": {
							"raw": "{{URL}}/api/room_templates/{{RoomTemplateID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"room_templates",
								"{{RoomTemplateID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Delete Room Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful DELETE & GET Request\"] = responseCode.code === 404;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"url": {
							"raw": "{{URL}}/api/room_templates/{{RoomTemplateID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"room_templates",
								"{{RoomTemplateID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Rack Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful DELETE Request\"] = responseCode.code === 204;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"url": {
							"raw": "{{URL}}/api/obj_templates/{{RackTemplateID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"obj_templates",
								"{{RackTemplateID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Delete Rack Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 404;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"url": {
							"raw": "{{URL}}/api/rack_templates/{{RackTemplateID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"rack_templates",
								"{{RackTemplateID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Device Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful DELETE Request\"] = responseCode.code === 204;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"url": {
							"raw": "{{URL}}/api/obj_templates/{{DeviceTemplateID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"obj_templates",
								"{{DeviceTemplateID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Delete Device Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 404;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"url": {
							"raw": "{{URL}}/api/device_templates/{{DeviceTemplateID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"device_templates",
								"{{DeviceTemplateID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Tag",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful DELETE Request\"] = responseCode.code === 204;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"url": {
							"raw": "{{URL}}/api/tags/{{TagID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"tags",
								"{{TagID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Delete Tag",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 404;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"url": {
							"raw": "{{URL}}/api/tags/{{TagID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"tags",
								"{{TagID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Verify DB is Empty",
			"item": [
				{
					"name": "Verify Domains Empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 404;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/domains",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"domains"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Sites Empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 404;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"url": {
							"raw": "{{URL}}/api/sites",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"sites"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Buildings Empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 404;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"url": {
							"raw": "{{URL}}/api/buildings",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"buildings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Rooms Empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 404;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"url": {
							"raw": "{{URL}}/api/rooms",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"rooms"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify ACs Empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 404;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"url": {
							"raw": "{{URL}}/api/acs",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"acs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Separators Empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 404;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"url": {
							"raw": "{{URL}}/api/separators",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"separators"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Panels Empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 404;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"url": {
							"raw": "{{URL}}/api/panels",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"panels"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Aisles Empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 404;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"url": {
							"raw": "{{URL}}/api/rows",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"rows"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Cabinets Empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 404;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"url": {
							"raw": "{{URL}}/api/cabinets",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"cabinets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Tiles Empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 404;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"url": {
							"raw": "{{URL}}/api/tiles",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"tiles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Groups Empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 404;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"url": {
							"raw": "{{URL}}/api/groups",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Corridors Empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 404;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"url": {
							"raw": "{{URL}}/api/corridors",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"corridors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Racks Empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 404;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"url": {
							"raw": "{{URL}}/api/racks",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"racks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Devices Empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 404;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"url": {
							"raw": "{{URL}}/api/devices",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Room-Template Empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 404;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"url": {
							"raw": "{{URL}}/api/room_templates",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"room_templates"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Obj-Template Empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 404;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"url": {
							"raw": "{{URL}}/api/obj_templates",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"obj_templates"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Tags Empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 404;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"url": {
							"raw": "{{URL}}/api/tags",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"tags"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Backend Flutter",
			"item": [
				{
					"name": "Get objs hierarchy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 404;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"url": {
							"raw": "{{URL}}/api/hierarchy",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"hierarchy"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get objs hierarchy attrs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 404;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"url": {
							"raw": "{{URL}}/api/hierarchy/attributes",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"hierarchy",
								"attributes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get domain hierarchy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 404;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"url": {
							"raw": "{{URL}}/api/hierarchy/domains",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"hierarchy",
								"domains"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create project",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"attributes\": [\n        \"domain\"\n    ],\n    \"authorLastUpdate\": \"helder\",\n    \"dateRange\": \"today\",\n    \"lastUpdate\": \"today\",\n    \"name\": \"test 1\",\n    \"namespace\": \"physical\",\n    \"objects\": [\n        \"siteB\"\n    ],\n    \"showAvg\": false,\n    \"showSum\": false,\n    \"permissions\": [\n        \"user@test.com\", \"admin\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/projects",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get projects",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 200;",
									"var data = pm.response.json();",
									"pm.environment.set(\"ProjectID\", data.data.projects[0].Id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"url": {
							"raw": "{{URL}}/api/projects?user={{UserEmail}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"projects"
							],
							"query": [
								{
									"key": "user",
									"value": "{{UserEmail}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update project",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 404;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"attributes\": [\n        \"domain\"\n    ],\n    \"authorLastUpdate\": \"helder\",\n    \"dateRange\": \"today\",\n    \"lastUpdate\": \"today\",\n    \"name\": \"test 1\",\n    \"namespace\": \"physical\",\n    \"objects\": [\n        \"siteB\"\n    ],\n    \"showAvg\": false,\n    \"showSum\": false,\n    \"permissions\": [\n        \"admin\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/projects/{{ProjectID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"projects",
								"{{ProjectID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove project",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 404;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"url": {
							"raw": "{{URL}}/api/projects/{{ProjectID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"projects",
								"{{ProjectID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get DB",
			"item": [
				{
					"name": "Get Object",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/objects/{{ObjectHierarchyName}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"objects",
								"{{ObjectHierarchyName}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Object With Simple Filter",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET\"] = responseCode.code === 200;"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/objects?domain={{DomainID}}&id={{RoomID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"objects"
							],
							"query": [
								{
									"key": "domain",
									"value": "{{DomainID}}"
								},
								{
									"key": "id",
									"value": "{{RoomID}}"
								},
								{
									"key": "namespace",
									"value": "physical",
									"disabled": true
								},
								{
									"key": "namespace",
									"value": "logical",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Object With Complex Filter Copy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"$and\": [\n        {\n            \"domain\": {\n                \"$eq\": \"{{DomainID}}\"\n            }\n        },\n        {\n            \"id\": {\n                \"$eq\": \"{{RoomID}}\"\n            }\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/objects/search?name=R1",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"objects",
								"search"
							],
							"query": [
								{
									"key": "name",
									"value": "R1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Site Hierarchy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/sites/{{SiteID}}/all",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"sites",
								"{{SiteID}}",
								"all"
							],
							"query": [
								{
									"key": "fieldOnly",
									"value": "id",
									"disabled": true
								},
								{
									"key": "startDate",
									"value": "2021-01-30",
									"disabled": true
								},
								{
									"key": "endDate",
									"value": "2024-01-30",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "2",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Site Rooms",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/sites/{{SiteID}}/rooms",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"sites",
								"{{SiteID}}",
								"rooms"
							],
							"query": [
								{
									"key": "fieldOnly",
									"value": "id",
									"disabled": true
								},
								{
									"key": "startDate",
									"value": "2021-01-30",
									"disabled": true
								},
								{
									"key": "endDate",
									"value": "2024-01-30",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "2",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get TempUnit",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 404;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"url": {
							"raw": "{{URL}}/api/tempunits/{{RoomID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"tempunits",
								"{{RoomID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get SiteColors from Child",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 404;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"url": {
							"raw": "{{URL}}/api/tempunits/{{RoomID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"tempunits",
								"{{RoomID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get JSON Schema",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 404;"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}"
							}
						],
						"url": {
							"raw": "{{URL}}/api/schemas/device_schema.json",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"schemas",
								"device_schema.json"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}