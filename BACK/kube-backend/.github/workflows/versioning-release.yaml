name: üì¶ Create Release

on:
  workflow_dispatch:

jobs:
  create-release:
      name: üÜï Create Release
      runs-on: ubuntu-latest
      steps:
        - name: üåç Set environment
          id: set-environment
          run: |
            if [[ "${{ github.ref_name }}" == "release-candidate/"* ]]; then
              echo "ENVIRONMENT=Release" >> $GITHUB_ENV
            else 
              echo "Release needs to be created from release-candidate branches"
              exit 1
            fi

        - uses: actions/checkout@v3.5.3
          with:
            fetch-depth: "0"
  
        - name: ‚ùî Extract project version
          shell: bash
          run: |
            VERSION=$( echo ${{ github.ref_name }} | sed -e "s/release.*\///g")
            echo "VERSION=$VERSION" >> $GITHUB_ENV

  
        - name: ü™£ Init Git
          shell: bash
          run: |
            git config --global user.email "svc@users.noreply.github.com"
            git config --global user.name "svc"
  
        - name: ‚öôÔ∏è Set release branch parameters
          id: get-release-branch
          run: |
            echo "BRANCH_RELEASE=release/${{ env.VERSION }}" >> $GITHUB_ENV
            echo "RELEASE_CANDIDATE_SHA=$(git rev-parse ${{ github.ref_name }})" >> $GITHUB_ENV
            
  
        - name: üÜï Create Branch release
          uses: peterjgrainger/action-create-branch@v2.4.0
          env:
            GITHUB_TOKEN: ${{ secrets.SVC_GITHUB_TOKEN }}
          with:
            branch: ${{ env.BRANCH_RELEASE }}
            sha: "${{ env.RELEASE_CANDIDATE_SHA }}"
  
        - uses: actions/checkout@v3.5.3
          with:
            token: ${{ secrets.SVC_GITHUB_TOKEN }}
            ref: ${{ env.BRANCH_RELEASE }}
            clean: true
            fetch-depth: "0"
  
        - name: ‚åõ Wait for build to be triggered
          shell: bash
          run: sleep 30

        - name: ‚åõ Wait for build to complete
          uses: ./.github/actions/utils/wait-job
          with:
            BRANCH: ${{ env.BRANCH_RELEASE }}
            GITHUB_TOKEN: ${{ secrets.SVC_GITHUB_TOKEN }}

        - name: üìù Generate Release Notes
          shell: bash
          run: |
            PREVIOUS_TAG=$(git describe --tags --abbrev=0 `git rev-list --tags --max-count=2` | tail -n 1)
            echo "PREVIOUS_TAG=$PREVIOUS_TAG" >> $GITHUB_ENV
            sudo apt-get install jq
      
            curl -L -X POST "https://api.github.com/repos/ditrit/${{ github.event.repository.name }}/releases/generate-notes" -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.SVC_GITHUB_TOKEN }}" -H "X-GitHub-Api-Version: 2022-11-28" -d '{"tag_name":"${{ env.VERSION }}","previous_tag_name":"${{ env.PREVIOUS_TAG }}"}' > RES.json
      
            NAME=$(cat "RES.json" | jq -r '.name')
            echo "NAME<<EOF" >> $GITHUB_ENV
            echo "$NAME" >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV
    
            BODY=$(cat "RES.json" | jq -r '.body')
            echo "BODY<<EOF" >> $GITHUB_ENV
            echo "$BODY" >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV

        - name: üÜï Create release with artifact
          uses: ncipollo/release-action@v1.12.0
          with:
            token: ${{ secrets.SVC_GITHUB_TOKEN }}
            tag: ${{ env.VERSION }}
            body: ${{ env.BODY }}
            name: ${{ env.NAME }}
            makeLatest: true

        - name: üóëÔ∏è Delete Release Candidate branch
          continue-on-error: true
          uses: dawidd6/action-delete-branch@v3.1.0
          with:
            github_token: ${{ secrets.GITHUB_TOKEN }}
            branches: "release-candidate/${{ env.VERSION }}"
            
  
  
  
        
