{
	"info": {
		"_postman_id": "65912eb7-f5cb-4c7f-a4f3-c3cbb68468c5",
		"name": "OGREE Basic Script (MDB)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Login",
			"item": [
				{
					"name": "localhost:8000/api",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"pm.environment.set(\"AuthToken\", data.account.token);",
									"tests[\"Successful POST Request\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJVc2VySWQiOjYzMTc1NzU5MzY0ODg1NzA4OX0.oVAbYW-oFwFwPxqIOaTctJhtfoDsvTkoiRko5DM1Whw",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"iamlegend@gmail.com\",\n    \"password\": \"secret\",\n    \"customer\": \"Mitsubishi\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api"
							]
						}
					},
					"response": []
				},
				{
					"name": "API Stats",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"pm.environment.set(\"AuthToken\", data.account.token);",
									"tests[\"Successful POST Request\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJVc2VySWQiOjYzMTc1NzU5MzY0ODg1NzA4OX0.oVAbYW-oFwFwPxqIOaTctJhtfoDsvTkoiRko5DM1Whw",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"iamlegend@gmail.com\",\n    \"password\": \"secret\",\n    \"customer\": \"Mitsubishi\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/stats",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"stats"
							]
						}
					},
					"response": []
				},
				{
					"name": "RBAC Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"pm.environment.set(\"AuthToken\", data.account.token);",
									"tests[\"Successful POST Request\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJVc2VySWQiOjYzMTc1NzU5MzY0ODg1NzA4OX0.oVAbYW-oFwFwPxqIOaTctJhtfoDsvTkoiRko5DM1Whw",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"realheat@gmail.com\",\n    \"password\": \"secret\",\n    \"domain\":\"D2\",\n    \"role\":\"super\",\n    \"adminPassword\":\"thisIsTheRBACSecretPassword\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api"
							]
						}
					},
					"response": []
				},
				{
					"name": "localhost:8000/api/login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.get(\"AuthToken\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"email\": \"iamlegend@gmail.com\", \"password\" : \"secret\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "token/valid",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/token/valid",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"token",
								"valid"
							]
						}
					},
					"response": []
				},
				{
					"name": "API Version",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/version",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"version"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Tenant",
			"item": [
				{
					"name": "Create Tenant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful POST Request\"] = responseCode.code === 201;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"data\"][\"id\"]",
									"pm.environment.set(\"TenantID\", ID)",
									"console.log(\"The TID is: \", pm.environment.get(\"TenantID\"))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"DEMO\",\n  \"id\": null,\n  \"parentId\": null,\n  \"category\": \"tenant\",\n  \"description\": [],\n  \"domain\": \"DEMO\",\n  \"attributes\": {\n    \"color\": \"FFFFFF\",\n    \"mainContact\": \"Ced\",\n    \"mainPhone\": \"0612345678\",\n    \"mainEmail\": \"ced@ogree3D.com\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/tenants",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"tenants"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Tenant",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/tenants/{{TenantID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"tenants",
								"{{TenantID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Sites Of Tenant",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/tenants/{{TenantName}}/sites",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"tenants",
								"{{TenantName}}",
								"sites"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get NamedSite",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/tenants/{{TenantName}}/sites/ALPHA",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"tenants",
								"{{TenantName}}",
								"sites",
								"ALPHA"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Buildings Of NamedSite",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/tenants/{{TenantName}}/sites/ALPHA/buildings",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"tenants",
								"{{TenantName}}",
								"sites",
								"ALPHA",
								"buildings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get BuildingsOfTenant",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/tenants/{{TenantName}}/buildings",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"tenants",
								"{{TenantName}}",
								"buildings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get TenantHierarchyToBuilding",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/tenants/{{TenantName}}/all/sites/buildings",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"tenants",
								"{{TenantName}}",
								"all",
								"sites",
								"buildings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get TenantHierarchy Limit",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/tenants/{{TenantName}}/all?limit=2",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"tenants",
								"{{TenantName}}",
								"all"
							],
							"query": [
								{
									"key": "limit",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get TenantHierarchToDevice",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/tenants/{{TenantName}}/all/sites/buildings/rooms/racks/devices",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"tenants",
								"{{TenantName}}",
								"all",
								"sites",
								"buildings",
								"rooms",
								"racks",
								"devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get TenantHierarchyToRoom",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/tenants/{{TenantName}}/all/sites/buildings/rooms",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"tenants",
								"{{TenantName}}",
								"all",
								"sites",
								"buildings",
								"rooms"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get TenantHierarchyToRack",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/tenants/{{TenantName}}/all/sites/buildings/rooms/racks",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"tenants",
								"{{TenantName}}",
								"all",
								"sites",
								"buildings",
								"rooms",
								"racks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get NamedBldg",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/tenants/{{TenantName}}/sites/ALPHA/buildings/B",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"tenants",
								"{{TenantName}}",
								"sites",
								"ALPHA",
								"buildings",
								"B"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get RoomsOfNamedBldg",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/tenants/{{TenantName}}/sites/ALPHA/buildings/B/rooms",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"tenants",
								"{{TenantName}}",
								"sites",
								"ALPHA",
								"buildings",
								"B",
								"rooms"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get NamedRoom",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/tenants/{{TenantName}}/sites/ALPHA/buildings/B/rooms/R1",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"tenants",
								"{{TenantName}}",
								"sites",
								"ALPHA",
								"buildings",
								"B",
								"rooms",
								"R1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get RacksOfNamedRoom",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/tenants/{{TenantName}}/sites/ALPHA/buildings/B/rooms/R1/racks",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"tenants",
								"{{TenantName}}",
								"sites",
								"ALPHA",
								"buildings",
								"B",
								"rooms",
								"R1",
								"racks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get NamedRack",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/tenants/{{TenantName}}/sites/ALPHA/buildings/B/rooms/R1/racks/A01",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"tenants",
								"{{TenantName}}",
								"sites",
								"ALPHA",
								"buildings",
								"B",
								"rooms",
								"R1",
								"racks",
								"A01"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get DevicesOfNamedRack",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/tenants/{{TenantName}}/sites/ALPHA/buildings/B/rooms/R1/racks/A01/devices",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"tenants",
								"{{TenantName}}",
								"sites",
								"ALPHA",
								"buildings",
								"B",
								"rooms",
								"R1",
								"racks",
								"A01",
								"devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get NamedDevice",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/tenants/{{TenantName}}/sites/ALPHA/buildings/B/rooms/R1/racks/A01/devices/DeviceA",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"tenants",
								"{{TenantName}}",
								"sites",
								"ALPHA",
								"buildings",
								"B",
								"rooms",
								"R1",
								"racks",
								"A01",
								"devices",
								"DeviceA"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get (Sub)DevicesOfNamedDevice",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/tenants/{{TenantName}}/sites/ALPHA/buildings/B/rooms/R1/racks/A01/devices/DeviceA/devices",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"tenants",
								"{{TenantName}}",
								"sites",
								"ALPHA",
								"buildings",
								"B",
								"rooms",
								"R1",
								"racks",
								"A01",
								"devices",
								"DeviceA",
								"devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Named(Sub)Device",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/tenants/{{TenantName}}/sites/ALPHA/buildings/B/rooms/R1/racks/A01/devices/DeviceA/devices/SubDeviceA",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"tenants",
								"{{TenantName}}",
								"sites",
								"ALPHA",
								"buildings",
								"B",
								"rooms",
								"R1",
								"racks",
								"A01",
								"devices",
								"DeviceA",
								"devices",
								"SubDeviceA"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Named(Sub)Device1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/tenants/{{TenantName}}/sites/ALPHA/buildings/B/rooms/R1/racks/A01/devices/DeviceA/devices/SubDeviceA/devices/SubDevice1A",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"tenants",
								"{{TenantName}}",
								"sites",
								"ALPHA",
								"buildings",
								"B",
								"rooms",
								"R1",
								"racks",
								"A01",
								"devices",
								"DeviceA",
								"devices",
								"SubDeviceA",
								"devices",
								"SubDevice1A"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Hierarchy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/tenants/{{TenantID}}/all",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"tenants",
								"{{TenantID}}",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Hierarchy via TenantName",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/tenants/{{TenantID}}/all",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"tenants",
								"{{TenantID}}",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Hierarchy Nonstd",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/tenants/DEMO/all/nonstd",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"tenants",
								"DEMO",
								"all",
								"nonstd"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful PUT Request\"] = responseCode.code === 200;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"data\"][\"id\"]"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"attributes\": {\n    \"another\":\"one\"\n  },\n  \"someUsefulAttr\":\"customValue\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/tenants/{{TenantID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"tenants",
								"{{TenantID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Patch",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful PUT Request\"] = responseCode.code === 200;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"tenant\"][\"id\"]"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"FISHER\",\n  \"id\": null,\n  \"parentId\": null,\n  \"category\": \"999\",\n  \"description\": [\"Some Forsaken Joint\", \"Rotten Apple\"],\n  \"domain\": \"999999\",\n  \"attributes\": {\n    \"color\": \"99\",\n    \"mainContact\": \"99\",\n    \"mainPhone\": \"999\",\n    \"mainEmail\": \"ghetto@ogree3D.com\"\n  }\n  \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/tenants/{{TenantID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"tenants",
								"{{TenantID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/tenants/{{TenantID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"tenants",
								"{{TenantID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get By Query",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*tests[\"Successful GET\"] = responseCode.code === 200;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"tenant\"][\"name\"]*/",
									"",
									"//tests[\"Successful PUT Request\"] = ID == "
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/tenants?color=99",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"tenants"
							],
							"query": [
								{
									"key": "color",
									"value": "99"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete It",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful DELETE Request\"] = responseCode.code === 204;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/tenants/{{TenantID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"tenants",
								"{{TenantID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Test Get All Tenants",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 404;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/tenants",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"tenants"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Again",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful POST Request\"] = responseCode.code === 201;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"tenant\"][\"id\"]",
									"pm.environment.set(\"TenantID\", ID)",
									"console.log(\"The TID is: \", pm.environment.get(\"TenantID\"))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"DEMO\",\n  \"id\": null,\n  \"parentId\": null,\n  \"category\": \"tenant\",\n  \"description\": [],\n  \"domain\": \"DEMO\",\n  \"attributes\": {\n    \"color\": \"FFFFFF\",\n    \"mainContact\": \"Ced\",\n    \"mainPhone\": \"0612345678\",\n    \"mainEmail\": \"ced@ogree3D.com\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/tenants",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"tenants"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Site",
			"item": [
				{
					"name": "Get Site",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/sites/{{SiteID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"sites",
								"{{SiteID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Buildings",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/sites/{{SiteID}}/buildings",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"sites",
								"{{SiteID}}",
								"buildings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get NamedBuilding",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/sites/{{SiteID}}/buildings/B",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"sites",
								"{{SiteID}}",
								"buildings",
								"B"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get RoomsOfNamedBldg",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/sites/{{SiteID}}/buildings/B/rooms",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"sites",
								"{{SiteID}}",
								"buildings",
								"B",
								"rooms"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get RoomsOfSite",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/sites/{{SiteID}}/rooms",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"sites",
								"{{SiteID}}",
								"rooms"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get NamedRoom",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/sites/{{SiteID}}/buildings/B/rooms/R1",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"sites",
								"{{SiteID}}",
								"buildings",
								"B",
								"rooms",
								"R1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get RacksOfNamedRoom",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/sites/{{SiteID}}/buildings/B/rooms/R1/racks/A01",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"sites",
								"{{SiteID}}",
								"buildings",
								"B",
								"rooms",
								"R1",
								"racks",
								"A01"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get DevicesOfNamedRack",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/sites/{{SiteID}}/buildings/B/rooms/R1/racks/A01/devices/DeviceA",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"sites",
								"{{SiteID}}",
								"buildings",
								"B",
								"rooms",
								"R1",
								"racks",
								"A01",
								"devices",
								"DeviceA"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get NamedDevice",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/sites/{{SiteID}}/buildings/B/rooms/R1/racks/A01/devices/DeviceA",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"sites",
								"{{SiteID}}",
								"buildings",
								"B",
								"rooms",
								"R1",
								"racks",
								"A01",
								"devices",
								"DeviceA"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get DevicesOfNamedDevice",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/sites/{{SiteID}}/buildings/B/rooms/R1/racks/A01/devices/DeviceA/devices",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"sites",
								"{{SiteID}}",
								"buildings",
								"B",
								"rooms",
								"R1",
								"racks",
								"A01",
								"devices",
								"DeviceA",
								"devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get NamedDeviceOfNamedDevice",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/sites/{{SiteID}}/buildings/B/rooms/R1/racks/A01/devices/DeviceA/devices/SubDeviceA",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"sites",
								"{{SiteID}}",
								"buildings",
								"B",
								"rooms",
								"R1",
								"racks",
								"A01",
								"devices",
								"DeviceA",
								"devices",
								"SubDeviceA"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get NamedRack",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/sites/{{SiteID}}/buildings/B/rooms/R1",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"sites",
								"{{SiteID}}",
								"buildings",
								"B",
								"rooms",
								"R1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Hierarchy",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/sites/{{SiteID}}/all",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"sites",
								"{{SiteID}}",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get HierarchyToRoom",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/sites/{{SiteID}}/all/buildings/rooms",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"sites",
								"{{SiteID}}",
								"all",
								"buildings",
								"rooms"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Hierarchy Limit",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/sites/{{SiteID}}/all?limit=2",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"sites",
								"{{SiteID}}",
								"all"
							],
							"query": [
								{
									"key": "limit",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get HierarchyToRack",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/sites/{{SiteID}}/all/buildings/rooms/racks",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"sites",
								"{{SiteID}}",
								"all",
								"buildings",
								"rooms",
								"racks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get HierarchyToDevice",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/sites/{{SiteID}}/all/buildings/rooms/racks/devices",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"sites",
								"{{SiteID}}",
								"all",
								"buildings",
								"rooms",
								"racks",
								"devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Hierarchy Nonstd",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/sites/{{SiteID}}/all/nonstd",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"sites",
								"{{SiteID}}",
								"all",
								"nonstd"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Sites",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/sites",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"sites"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get By Name",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/sites?name=ALPHA",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"sites"
							],
							"query": [
								{
									"key": "name",
									"value": "ALPHA"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get By Query",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*tests[\"Successful GET\"] = responseCode.code === 200;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"tenant\"][\"name\"]*/",
									"",
									"//tests[\"Successful PUT Request\"] = ID == "
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/sites?city=Truc",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"sites"
							],
							"query": [
								{
									"key": "city",
									"value": "Truc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Site",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful POST Request\"] = responseCode.code === 201;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"data\"][\"id\"]",
									"pm.environment.set(\"SiteID\", ID)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"ALPHA\",\n    \"id\": null,\n    \"parentId\": \"{{TenantID}}\",\n    \"category\": \"site\",\n    \"description\": [\n        \"This is a demo...\"\n    ],\n    \"domain\": \"DEMO\",\n    \"attributes\": {\n        \"orientation\": \"NW\",\n        \"usableColor\": \"5BDCFF\",\n        \"reservedColor\": \"AAAAAA\",\n        \"technicalColor\": \"D0FF78\",\n        \"address\": \"1 rue bidule\",\n        \"zipcode\": \"42000\",\n        \"city\": \"Truc\",\n        \"country\": \"FRANCE\",\n        \"gps\": \"[1,2,0]\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/sites",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"sites"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Site",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"SiteA\",\n    \"id\": null,\n    \"parentId\": \"{{TID}}\",\n    \"category\": \"site\",\n    \"description\": [\n        \"guess whos back\"\n    ],\n    \"domain\": \"DERELICT\",\n    \"attributes\": {\n        \"orientation\": \"NW\",\n        \"usableColor\": \"99\",\n        \"reservedColor\": \"99\",\n        \"technicalColor\": \"99\",\n        \"address\": \"99\",\n        \"zipcode\": \"99\",\n        \"city\": \"99\",\n        \"country\": \"99\",\n        \"gps\": \"99\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/sites/{{SiteID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"sites",
								"{{SiteID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Patch Site",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"SiteA999\",\n    \"domain\": \"DERELICT\",\n    \"attributes\": {\n        \"orientation\": \"NW\",\n        \"another\":\"one\"\n    },\n    \"someUsefulAttr\":\"customValue\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/sites/{{SiteID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"sites",
								"{{SiteID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Site",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/sites/{{SiteID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"sites",
								"{{SiteID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Building",
			"item": [
				{
					"name": "Get Building",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/buildings/{{BuildingID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"buildings",
								"{{BuildingID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get NamedRoomOfBuilding",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/buildings/{{BuildingID}}/rooms",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"buildings",
								"{{BuildingID}}",
								"rooms"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get NamedRack",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/buildings/{{BuildingID}}/rooms/R1/racks/A01",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"buildings",
								"{{BuildingID}}",
								"rooms",
								"R1",
								"racks",
								"A01"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get RacksOfBuilding",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/buildings/{{BuildingID}}/acs",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"buildings",
								"{{BuildingID}}",
								"acs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get ACsOfBuilding",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/buildings/{{BuildingID}}/racks",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"buildings",
								"{{BuildingID}}",
								"racks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get PanelsOfBuilding",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/buildings/{{BuildingID}}/panels",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"buildings",
								"{{BuildingID}}",
								"panels"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get CabinetsOfBuilding",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/buildings/{{BuildingID}}/cabinets",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"buildings",
								"{{BuildingID}}",
								"cabinets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get CorridorsOfBuilding",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/buildings/{{BuildingID}}/corridors",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"buildings",
								"{{BuildingID}}",
								"corridors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get RoomsOfBuilding",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/buildings/{{BuildingID}}/rooms",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"buildings",
								"{{BuildingID}}",
								"rooms"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get DevicesOfBuilding",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/buildings/{{BuildingID}}/rooms/R1/racks/A01/devices",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"buildings",
								"{{BuildingID}}",
								"rooms",
								"R1",
								"racks",
								"A01",
								"devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get RacksUsingNamedRoom",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/buildings/{{BuildingID}}/rooms/R1/racks",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"buildings",
								"{{BuildingID}}",
								"rooms",
								"R1",
								"racks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get (Sub)DevicesUsingNamedDevice",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/buildings/{{BuildingID}}/rooms/R1/racks/A01/devices/DeviceA/devices",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"buildings",
								"{{BuildingID}}",
								"rooms",
								"R1",
								"racks",
								"A01",
								"devices",
								"DeviceA",
								"devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get DevicesUsingNamed(Sub)Device",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/buildings/{{BuildingID}}/rooms/R1/racks/A01/devices/DeviceA/devices/SubDeviceA/devices",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"buildings",
								"{{BuildingID}}",
								"rooms",
								"R1",
								"racks",
								"A01",
								"devices",
								"DeviceA",
								"devices",
								"SubDeviceA",
								"devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Named(Sub)Device1",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/buildings/{{BuildingID}}/rooms/R1/racks/A01/devices/DeviceA/devices/SubDeviceA/devices/SubDevice1A",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"buildings",
								"{{BuildingID}}",
								"rooms",
								"R1",
								"racks",
								"A01",
								"devices",
								"DeviceA",
								"devices",
								"SubDeviceA",
								"devices",
								"SubDevice1A"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Named(Sub)Device",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/buildings/{{BuildingID}}/rooms/R1/racks/A01/devices/DeviceA/devices/SubDeviceA",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"buildings",
								"{{BuildingID}}",
								"rooms",
								"R1",
								"racks",
								"A01",
								"devices",
								"DeviceA",
								"devices",
								"SubDeviceA"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Hierarchy",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/buildings/{{BuildingID}}/all",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"buildings",
								"{{BuildingID}}",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get HierarchyToRack",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/buildings/{{BuildingID}}/all/rooms/racks",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"buildings",
								"{{BuildingID}}",
								"all",
								"rooms",
								"racks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get HierarchyToDevice",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/buildings/{{BuildingID}}/all/rooms/racks/devices",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"buildings",
								"{{BuildingID}}",
								"all",
								"rooms",
								"racks",
								"devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Hierarchy Nonstd",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/buildings/{{BuildingID}}/all/nonstd",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"buildings",
								"{{BuildingID}}",
								"all",
								"nonstd"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Buildings",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/buildings",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"buildings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get By Name",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/buildings?name=B",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"buildings"
							],
							"query": [
								{
									"key": "name",
									"value": "B"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get By Query",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*tests[\"Successful GET\"] = responseCode.code === 200;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"tenant\"][\"name\"]*/",
									"",
									"//tests[\"Successful PUT Request\"] = ID == "
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/buildings?domain=DEMO&name=C",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"buildings"
							],
							"query": [
								{
									"key": "domain",
									"value": "DEMO"
								},
								{
									"key": "name",
									"value": "C"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Building",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful POST Request\"] = responseCode.code === 201;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"data\"][\"id\"]",
									"pm.environment.set(\"BuildingID\", ID)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"B\",\n    \"id\": null,\n    \"parentId\": \"{{SiteID}}\",\n    \"category\": \"building\",\n    \"description\": [\n        \"Building B\"\n    ],\n    \"domain\": \"DEMO\",\n    \"attributes\": {\n        \"posXY\": \"{\\\"x\\\":-30.0,\\\"y\\\":0.0}\",\n        \"posXYUnit\": \"m\",\n        \"posXYU\": \"m\",\n        \"posZ\": \"10\",\n        \"posZUnit\": \"m\",\n        \"size\": \"{\\\"x\\\":25.0,\\\"y\\\":29.399999618530275}\",\n        \"sizeU\": \"m\",\n        \"sizeUnit\": \"m\",\n        \"height\": \"0\",\n        \"heightUnit\": \"m\",\n        \"heightU\": \"m\",\n        \"nbFloors\": \"1\",\n        \"rotation\":\"60\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/buildings",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"buildings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Building",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Abandoned Building\",\n    \"id\": null,\n    \"parentId\": \"{{SID}}\",\n    \"category\": \"999\",\n    \"description\": [\n        \"Wassup yo\",\n        \"Guess whos back\"\n    ],\n    \"domain\": \"999\",\n    \"attributes\": {\n        \"posXY\": \"999\",\n        \"posXYUnit\": \"m\",\n        \"posZ\": \"999\",\n        \"posZUnit\": \"m\",\n        \"size\": \"999\",\n        \"sizeUnit\": \"m\",\n        \"height\": \"0\",\n        \"heightUnit\": \"m\",\n        \"nbFloors\": \"99\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/buildings/{{BuildingID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"buildings",
								"{{BuildingID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Patch Building",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Abandoned-Building\",\n    \"description\": [\n        \"Wassup yo\",\n        \"Guess whos back\"\n    ],\n    \"domain\": \"999\",\n    \"attributes\": {\n        \"size\":null\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/buildings/{{BuildingID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"buildings",
								"{{BuildingID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Building",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/buildings/{{BuildingID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"buildings",
								"{{BuildingID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Room",
			"item": [
				{
					"name": "Get Room",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/rooms/{{RoomID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"rooms",
								"{{RoomID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get RacksOfRoom",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/rooms/{{RoomID}}/racks/A01/devices",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"rooms",
								"{{RoomID}}",
								"racks",
								"A01",
								"devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get PanelsOfRoom",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/rooms/{{RoomID}}/panels",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"rooms",
								"{{RoomID}}",
								"panels"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get CabinetsOfRoom",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/rooms/{{RoomID}}/cabinets",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"rooms",
								"{{RoomID}}",
								"cabinets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get GroupsOfRoom",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/rooms/{{RoomID}}/groups",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"rooms",
								"{{RoomID}}",
								"groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get CorridorsOfRoom",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/rooms/{{RoomID}}/corridors",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"rooms",
								"{{RoomID}}",
								"corridors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get RackSensorsOfRoom",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/rooms/{{RoomID}}/corridors",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"rooms",
								"{{RoomID}}",
								"corridors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get ACsOfRoom",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/rooms/{{RoomID}}/acs",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"rooms",
								"{{RoomID}}",
								"acs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get NamedDeviceOfRoom",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/rooms/{{RoomID}}/racks/A01/devices/DeviceA",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"rooms",
								"{{RoomID}}",
								"racks",
								"A01",
								"devices",
								"DeviceA"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Named(Sub)DeviceOfRoom",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/rooms/{{RoomID}}/racks/A01/devices/DeviceA/devices/SubDeviceA",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"rooms",
								"{{RoomID}}",
								"racks",
								"A01",
								"devices",
								"DeviceA",
								"devices",
								"SubDeviceA"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Named(Sub)Device1OfRoom",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/rooms/{{RoomID}}/racks/A01/devices/DeviceA/devices/SubDeviceA/devices/SubDevice1A",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"rooms",
								"{{RoomID}}",
								"racks",
								"A01",
								"devices",
								"DeviceA",
								"devices",
								"SubDeviceA",
								"devices",
								"SubDevice1A"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get (Sub)DevicesUsingNamedDeviceOfRoom",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/rooms/{{RoomID}}/racks/A01/devices/DeviceA/devices/SubDeviceA/devices",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"rooms",
								"{{RoomID}}",
								"racks",
								"A01",
								"devices",
								"DeviceA",
								"devices",
								"SubDeviceA",
								"devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get DevicesOfRoom",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/rooms/{{RoomID}}/racks/A01/devices",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"rooms",
								"{{RoomID}}",
								"racks",
								"A01",
								"devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get DevicesOfRoom Copy",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/rooms/{{RoomID}}/devices",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"rooms",
								"{{RoomID}}",
								"devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get RoomRackByName",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/rooms/{{RoomID}}/racks/A01",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"rooms",
								"{{RoomID}}",
								"racks",
								"A01"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get HIerarchy",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/rooms/{{RoomID}}/all",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"rooms",
								"{{RoomID}}",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get HIerarchyToDevices",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/rooms/{{RoomID}}/all/racks/devices",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"rooms",
								"{{RoomID}}",
								"all",
								"racks",
								"devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get HIerarchy NonStd",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/rooms/{{RoomID}}/all/nonstd",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"rooms",
								"{{RoomID}}",
								"all",
								"nonstd"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Rooms",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/rooms",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"rooms"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get By Name",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/rooms?name=",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"rooms"
							],
							"query": [
								{
									"key": "name",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get By Query",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*tests[\"Successful GET\"] = responseCode.code === 200;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"tenant\"][\"name\"]*/",
									"",
									"//tests[\"Successful PUT Request\"] = ID == "
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/rooms?domain=DERELICT",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"rooms"
							],
							"query": [
								{
									"key": "domain",
									"value": "DERELICT"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Room",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful POST Request\"] = responseCode.code === 201;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"data\"][\"id\"]",
									"pm.environment.set(\"RoomID\", ID)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"R1\",\n    \"id\": null,\n    \"parentId\": \"{{BuildingID}}\",\n    \"category\": \"room\",\n    \"description\": [\n        \"First room\"\n    ],\n    \"domain\": \"DEMO\",\n    \"attributes\": {\n        \"posXY\": \"{\\\"x\\\":0.0,\\\"y\\\":0.0}\",\n        \"posXYUnit\": \"m\",\n        \"posXYU\": \"m\",\n        \"posZ\": \"0\",\n        \"posZUnit\": \"m\",\n        \"template\": \"demo.R1\",\n        \"axisOrientation\": \"+N+W\",\n        \"size\": \"{\\\"x\\\":22.799999237060548,\\\"y\\\":19.799999237060548}\",\n        \"sizeUnit\": \"m\",\n        \"sizeU\": \"m\",\n        \"floorUnit\":\"f\",\n        \"height\": \"3\",\n        \"heightUnit\": \"m\",\n        \"heightU\": \"m\",\n        \"rotation\":\"60\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/rooms",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"rooms"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Room",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"AbandonedRoom\",\n    \"id\": null,\n    \"parentId\": \"{{BID}}\",\n    \"category\": \"999\",\n    \"description\": [\n        \"999\"\n    ],\n    \"domain\": \"999\",\n    \"attributes\": {\n        \"posXY\": \"999\",\n        \"posXYUnit\": \"m\",\n        \"posZ\": \"999\",\n        \"posZUnit\": \"m\",\n        \"template\": \"999\",\n        \"orientation\": \"NW\",\n        \"size\": \"999\",\n        \"sizeUnit\": \"m\",\n        \"height\": \"999\",\n        \"heightUnit\": \"m\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/rooms/{{RoomID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"rooms",
								"{{RoomID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Patch Room",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"PatchedRoom\",\n    \"category\": \"999\",\n    \"description\": [\n        \"999\"\n    ],\n    \"domain\": \"999\",\n    \"attributes\": {\n        \"posXY\": \"999\",\n        \"patch\":\"customValue\"\n    },\n     \"patch\":\"customValue\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/rooms/{{RoomID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"rooms",
								"{{RoomID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Patch Group",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Group909\",\n    \"racks\":  [\"SomeRackHere\"]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/rooms/{{RoomID}}/groups/{{GroupID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"rooms",
								"{{RoomID}}",
								"groups",
								"{{GroupID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Room",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/rooms/{{RoomID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"rooms",
								"{{RoomID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Rack",
			"item": [
				{
					"name": "Get Rack",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/racks/{{RackID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"racks",
								"{{RackID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Sensor",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/racks/{{RackID}}/racksensors/{{RackSensorID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"racks",
								"{{RackID}}",
								"racksensors",
								"{{RackSensorID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Sensors Of Rack",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/racks/{{RackID}}/rack-sensors",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"racks",
								"{{RackID}}",
								"rack-sensors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get DeviceSensors Of Rack",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/racks/{{RackID}}/device-sensors",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"racks",
								"{{RackID}}",
								"device-sensors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get RackDeviceByName",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/racks/{{RackID}}/devices/DeviceB",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"racks",
								"{{RackID}}",
								"devices",
								"DeviceB"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get RackSubDeviceByName",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/racks/{{RackID}}/devices/DeviceA/subdevices/AbandonedSubDevice",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"racks",
								"{{RackID}}",
								"devices",
								"DeviceA",
								"subdevices",
								"AbandonedSubDevice"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get SubDevicesUsingDeviceName",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/racks/{{RackID}}/devices/DeviceA/subdevices",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"racks",
								"{{RackID}}",
								"devices",
								"DeviceA",
								"subdevices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get SubDev1ByName",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/racks/{{RackID}}/devices/DeviceA/subdevices/SubdeviceA/subdevice1s/SubDevice1A",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"racks",
								"{{RackID}}",
								"devices",
								"DeviceA",
								"subdevices",
								"SubdeviceA",
								"subdevice1s",
								"SubDevice1A"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Subdev1sUsingSubdeviceName",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/racks/{{RackID}}/devices/DeviceA/subdevices/SubdeviceA/subdevice1s",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"racks",
								"{{RackID}}",
								"devices",
								"DeviceA",
								"subdevices",
								"SubdeviceA",
								"subdevice1s"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Hierarchy",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/racks/{{RackID}}/all",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"racks",
								"{{RackID}}",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get HierarchyToSubdevices",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/racks/{{RackID}}/all/devices/subdevices",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"racks",
								"{{RackID}}",
								"all",
								"devices",
								"subdevices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Hierarchy NonStd",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/racks/{{RackID}}/all/nonstd",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"racks",
								"{{RackID}}",
								"all",
								"nonstd"
							]
						}
					},
					"response": []
				},
				{
					"name": "localhost:8000/api/user/racks",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/racks",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"racks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get By Name",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/racks?name=",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"racks"
							],
							"query": [
								{
									"key": "name",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get By Query",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*tests[\"Successful GET\"] = responseCode.code === 200;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"tenant\"][\"name\"]*/",
									"",
									"//tests[\"Successful PUT Request\"] = ID == "
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/racks?domain=nil",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"racks"
							],
							"query": [
								{
									"key": "domain",
									"value": "nil"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Rack",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful POST Request\"] = responseCode.code === 201;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"data\"][\"id\"]",
									"pm.environment.set(\"RackID\", ID)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"A01\",\n    \"id\": null,\n    \"parentId\": \"{{RoomID}}\",\n    \"category\": \"rack\",\n    \"description\": [\n        \"Rack A01\",\n        \"The original one\",\n        \"-3/-5\\\\nA0-Z9\"\n    ],\n    \"domain\": \"DEMO\",\n    \"attributes\": {\n        \"posXY\": \"{\\\"x\\\":10.0,\\\"y\\\":0.0}\",\n        \"posXYUnit\": \"tile\",\n        \"posXYU\": \"tile\",\n        \"size\": \"{\\\"x\\\":60.0,\\\"y\\\":120.0}\",\n        \"sizeUnit\": \"cm\",\n        \"sizeU\": \"cm\",\n        \"posZ\": \"Some position\",\n        \"posZUnit\": \"cm\",\n        \"posZU\": \"cm\",\n        \"height\": \"42\",\n        \"heightUnit\": \"U\",\n        \"heightU\": \"U\",\n        \"template\": \"Some template\",\n        \"orientation\": \"front\",\n        \"vendor\": \"someVendor\",\n        \"type\": \"someType\",\n        \"model\": \"someModel\",\n        \"serial\": \"someSerial\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/racks",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"racks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Rack",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/racks/{{RackID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"racks",
								"{{RackID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Sensor",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/racks/{{RackID}}/rack-sensors/{{RackSensorID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"racks",
								"{{RackID}}",
								"rack-sensors",
								"{{RackSensorID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Rack",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Abandoned Rack\",\n    \"id\": null,\n    \"parentId\": \"{{RID}}\",\n    \"category\": \"rack\",\n    \"description\": [\n        \"99\",\n        \"999\",\n        \"9999\"\n    ],\n    \"domain\": \"Abandoned Rack\",\n    \"attributes\": {\n        \"posXY\": \"999\",\n        \"posXYUnit\": \"tile\",\n        \"size\": \"99\",\n        \"sizeUnit\": \"cm\",\n        \"height\": \"999\",\n        \"heightUnit\": \"U\",\n        \"template\": \"\",\n        \"orientation\": \"front\",\n        \"vendor\": \"999\",\n        \"type\": \"999\",\n        \"model\": \"999\",\n        \"serial\": \"999\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/racks/{{RackID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"racks",
								"{{RackID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Patch Rack",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Abandoned-Rack\",\n    \"category\": \"rack\",\n    \"description\": [\n        \"99\",\n        \"999\",\n        \"9999\"\n    ],\n    \"domain\": \"Abandoned Rack\",\n    \"attributes\": {\n        \"posXY\": \"999\",\n        \"posXYUnit\": \"tile\",\n        \"size\": \"99\",\n        \"sizeUnit\": \"cm\",\n        \"height\": \"999\",\n        \"heightUnit\": \"U\",\n        \"template\": \"\",\n        \"orientation\": \"front\",\n        \"vendor\": \"999\",\n        \"type\": \"999\",\n        \"model\": \"999\",\n        \"serial\": \"999\"\n    },\n    \"someAttr\":\"customValue\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/racks/{{RackID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"racks",
								"{{RackID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Sensor",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"SensorXA\",\n    \"parentId\" : \"{{RackID}}\",\n    \"category\": \"SENSOR-A99\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/racks/{{RackID}}/racksensors/{{RackSensorID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"racks",
								"{{RackID}}",
								"racksensors",
								"{{RackSensorID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Device",
			"item": [
				{
					"name": "Get Device",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/devices/{{DeviceID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"devices",
								"{{DeviceID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Sensors of Device",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/devices/{{DeviceID}}/device-sensors",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"devices",
								"{{DeviceID}}",
								"device-sensors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Device Hierarchy",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"limit\": \"1\"\n}"
						},
						"url": {
							"raw": "{{URL}}/api/devices/{{DeviceID}}/all",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"devices",
								"{{DeviceID}}",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Devices",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/devices",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get NamedSensorOf Device",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/devices/{{DeviceID}}/device-sensors/DeviceSensorA",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"devices",
								"{{DeviceID}}",
								"device-sensors",
								"DeviceSensorA"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get By Name",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/devices?name=",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"devices"
							],
							"query": [
								{
									"key": "name",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get By Query",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*tests[\"Successful GET\"] = responseCode.code === 200;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"tenant\"][\"name\"]*/",
									"",
									"//tests[\"Successful PUT Request\"] = ID == "
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/devices?serial=someSerial",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"devices"
							],
							"query": [
								{
									"key": "serial",
									"value": "someSerial"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful POST Request\"] = responseCode.code === 201;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"data\"][\"id\"]",
									"pm.environment.set(\"DeviceID\", ID)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"DeviceA\",\n    \"id\": null,\n    \"parentId\": \"{{RackID}}\",\n    \"category\": \"device\",\n    \"description\": [\n        \"Rack A01\",\n        \"The original one\",\n        \"-3/-5\\\\nA0-Z9\"\n    ],\n    \"domain\": \"Device DOMAIN\",\n    \"attributes\": {\n        \"posXY\": \"{\\\"x\\\":10.0,\\\"y\\\":0.0}\",\n        \"posXYUnit\": \"tile\",\n        \"posZ\": \"{\\\"x\\\":10.0,\\\"y\\\":0.0}\",\n        \"posZUnit\": \"tile\",\n        \"size\": \"{\\\"x\\\":60.0,\\\"y\\\":120.0}\",\n        \"sizeUnit\": \"cm\",\n        \"sizeU\":\"24\",\n        \"heightU\":\"3\",\n        \"heightUnit\": \"U\",\n        \"side\":\"front\",\n        \"template\": \"Some template\",\n        \"orientation\": \"front\",\n        \"vendor\": \"someVendor\",\n        \"type\": \"someType\",\n        \"model\": \"someModel\",\n        \"serial\": \"someSerial\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/devices",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Device",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/devices/{{DeviceID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"devices",
								"{{DeviceID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Sensor",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/devices/{{DeviceID}}/devicesensors/{{DeviceSensorID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"devices",
								"{{DeviceID}}",
								"devicesensors",
								"{{DeviceSensorID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Device",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Abandoned-Device\",\n    \"id\": null,\n    \"parentId\": \"{{RackID}}\",\n    \"category\": \"999\",\n    \"description\": [\n        \"Rack A01\",\n        \"The original one\",\n        \"-3/-5\\\\nA0-Z9\"\n    ],\n    \"domain\": \"99\",\n    \"attributes\": {\n        \"posXY\": \"99\",\n        \"posXYUnit\": \"tile\",\n        \"size\": \"99\",\n        \"sizeUnit\": \"cm\",\n        \"height\": \"99\",\n        \"heightUnit\": \"U\",\n        \"template\": \"\",\n        \"orientation\": \"front\",\n        \"vendor\": \"99\",\n        \"type\": \"99\",\n        \"model\": \"99\",\n        \"serial\": \"99\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/devices/{{DeviceID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"devices",
								"{{DeviceID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Patch Device",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Abandoned-Device\",\n    \"category\": \"999\",\n    \"description\": [\n        \"Rack A01\",\n        \"The original one\",\n        \"-3/-5\\\\nA0-Z9\"\n    ],\n    \"domain\": \"99\",\n    \"attributes\": {\n        \"posXY\": \"99\",\n        \"posXYUnit\": \"tile\",\n        \"size\": \"99\",\n        \"sizeUnit\": \"cm\",\n        \"height\": \"99\",\n        \"heightUnit\": \"U\",\n        \"template\": \"\",\n        \"orientation\": \"front\",\n        \"vendor\": \"99\",\n        \"type\": \"99\",\n        \"model\": \"99\",\n        \"serial\": \"99\",\n        \"someATTR\":\"customValue\"\n    },\n    \"another\":\"one\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/devices/{{DeviceID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"devices",
								"{{DeviceID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Sensor",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"DeviceSensor82-99\",\n    \"parentId\" : \"{{DeviceID}}\",\n    \"category\": \"SENSOR8299\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/devices/{{DeviceID}}/devicesensors/{{DeviceSensorID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"devices",
								"{{DeviceID}}",
								"devicesensors",
								"{{DeviceSensorID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Device Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful POST Request\"] = responseCode.code === 201;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"data\"][\"id\"]",
									"pm.environment.set(\"DeviceID\", ID)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"DeviceA\",\n    \"id\": null,\n    \"parentId\": \"{{RackID}}\",\n    \"category\": \"device\",\n    \"description\": [\n        \"Rack A01\",\n        \"The original one\",\n        \"-3/-5\\\\nA0-Z9\"\n    ],\n    \"domain\": \"Device DOMAIN\",\n    \"attributes\": {\n        \"posXY\": \"{\\\"x\\\":10.0,\\\"y\\\":0.0}\",\n        \"posXYUnit\": \"tile\",\n        \"posZ\": \"{\\\"x\\\":10.0,\\\"y\\\":0.0}\",\n        \"posZUnit\": \"tile\",\n        \"size\": \"{\\\"x\\\":60.0,\\\"y\\\":120.0}\",\n        \"sizeUnit\": \"cm\",\n        \"height\": \"42\",\n        \"heightUnit\": \"U\",\n        \"heightU\": \"U\",\n        \"template\": \"Some template\",\n        \"orientation\": \"front\",\n        \"vendor\": \"someVendor\",\n        \"type\": \"someType\",\n        \"model\": \"someModel\",\n        \"serial\": \"someSerial\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/devices",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"devices"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Stray Device",
			"item": [
				{
					"name": "Get Stray Device",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/stray-devices/{{StrayDeviceID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"stray-devices",
								"{{StrayDeviceID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Stray Device Hierarchy",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"limit\": \"1\"\n}"
						},
						"url": {
							"raw": "{{URL}}/api/stray-devices/{{StrayDeviceID}}/all",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"stray-devices",
								"{{StrayDeviceID}}",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Stray Devices",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/stray-devices",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"stray-devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get By Query",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*tests[\"Successful GET\"] = responseCode.code === 200;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"tenant\"][\"name\"]*/",
									"",
									"//tests[\"Successful PUT Request\"] = ID == "
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/stray-devices?name=trash",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"stray-devices"
							],
							"query": [
								{
									"key": "name",
									"value": "trash"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Stray Device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful POST Request\"] = responseCode.code === 201;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"data\"][\"id\"]",
									"pm.environment.set(\"StrayDeviceID\", ID)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"SaintPepsi\",\n    \"id\": null,\n    \"parentId\": null,\n    \"category\": \"device\",\n    \"description\": [\n        \"-3/-5\\\\nA0-Z9\"\n    ],\n    \"domain\": \"Device DOMAIN\",\n    \"attributes\": {\n        \"posXY\": \"{\\\"x\\\":10.0,\\\"y\\\":0.0}\",\n        \"posXYUnit\": \"tile\",\n        \"posZ\": \"{\\\"x\\\":10.0,\\\"y\\\":0.0}\",\n        \"posZUnit\": \"tile\",\n        \"size\": \"{\\\"x\\\":60.0,\\\"y\\\":120.0}\",\n        \"sizeUnit\": \"cm\",\n        \"height\": \"42\",\n        \"heightUnit\": \"U\",\n        \"heightU\": \"U\",\n        \"template\": \"Some template\",\n        \"orientation\": \"front\",\n        \"vendor\": \"someVendor\",\n        \"type\": \"someType\",\n        \"model\": \"someModel\",\n        \"serial\": \"someSerial\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/stray-devices",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"stray-devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Stray Device",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/stray-devices/{{StrayDeviceID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"stray-devices",
								"{{StrayDeviceID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Stray Device",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Abandoned-StrayDevice\",\n    \"id\": null,\n    \"category\": \"999\",\n    \"description\": [\n        \"Rack A01\",\n        \"The original one\",\n        \"-3/-5\\\\nA0-Z9\"\n    ],\n    \"domain\": \"99\",\n    \"attributes\": {\n        \"posXY\": \"99\",\n        \"posXYUnit\": \"tile\",\n        \"size\": \"99\",\n        \"sizeUnit\": \"cm\",\n        \"height\": \"99\",\n        \"heightUnit\": \"U\",\n        \"template\": \"\",\n        \"orientation\": \"front\",\n        \"vendor\": \"99\",\n        \"type\": \"99\",\n        \"model\": \"99\",\n        \"serial\": \"99\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/stray-devices/{{StrayDeviceID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"stray-devices",
								"{{StrayDeviceID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Patch Stray Device",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Abandoned-Device\",\n    \"category\": \"999\",\n    \"parentId\":\"trash\",\n    \"description\": [\n        \"Rack A01\",\n        \"The original one\",\n        \"-3/-5\\\\nA0-Z9\"\n    ],\n    \"domain\": \"99\",\n    \"attributes\": {\n        \"posXY\": \"99\",\n        \"posXYUnit\": \"tile\",\n        \"size\": \"99\",\n        \"sizeUnit\": \"cm\",\n        \"height\": \"99\",\n        \"heightUnit\": \"U\",\n        \"template\": \"\",\n        \"orientation\": \"front\",\n        \"vendor\": \"99\",\n        \"type\": \"99\",\n        \"model\": \"99\",\n        \"serial\": \"99\",\n        \"someATTR\":\"customValue\"\n    },\n    \"another\":\"one\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/stray-devices/{{StrayDeviceID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"stray-devices",
								"{{StrayDeviceID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Stray Device Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful POST Request\"] = responseCode.code === 201;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"data\"][\"id\"]",
									"pm.environment.set(\"DeviceID\", ID)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"DeviceA\",\n    \"id\": null,\n    \"parentId\": \"{{RackID}}\",\n    \"category\": \"device\",\n    \"description\": [\n        \"Rack A01\",\n        \"The original one\",\n        \"-3/-5\\\\nA0-Z9\"\n    ],\n    \"domain\": \"Device DOMAIN\",\n    \"attributes\": {\n        \"posXY\": \"{\\\"x\\\":10.0,\\\"y\\\":0.0}\",\n        \"posXYUnit\": \"tile\",\n        \"posZ\": \"{\\\"x\\\":10.0,\\\"y\\\":0.0}\",\n        \"posZUnit\": \"tile\",\n        \"size\": \"{\\\"x\\\":60.0,\\\"y\\\":120.0}\",\n        \"sizeUnit\": \"cm\",\n        \"height\": \"42\",\n        \"heightUnit\": \"U\",\n        \"heightU\": \"U\",\n        \"template\": \"Some template\",\n        \"orientation\": \"front\",\n        \"vendor\": \"someVendor\",\n        \"type\": \"someType\",\n        \"model\": \"someModel\",\n        \"serial\": \"someSerial\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/devices",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"devices"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Stray Sensor",
			"item": [
				{
					"name": "Get Stray Sensor",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/stray-sensors/{{StraySensorID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"stray-sensors",
								"{{StraySensorID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Stray Sensors",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/stray-sensors",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"stray-sensors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get By Query",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*tests[\"Successful GET\"] = responseCode.code === 200;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"tenant\"][\"name\"]*/",
									"",
									"//tests[\"Successful PUT Request\"] = ID == "
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/stray-sensors?name=trash",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"stray-sensors"
							],
							"query": [
								{
									"key": "name",
									"value": "trash"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Stray Sensor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful POST Request\"] = responseCode.code === 201;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"data\"][\"id\"]",
									"pm.environment.set(\"StraySensorID\", ID)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"StrayDeviceSensorA\",\n    \"parentId\" : \"\",\n    \"category\": \"SENSOR-D\",\n    \"type\": \"device\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/stray-sensors",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"stray-sensors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Stray Sensor",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/stray-sensors/{{StraySensorID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"stray-sensors",
								"{{StraySensorID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Stray Sensor",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Abandoned-StrayDevice\",\n    \"id\": null,\n    \"category\": \"999\",\n    \"description\": [\n        \"Rack A01\",\n        \"The original one\",\n        \"-3/-5\\\\nA0-Z9\"\n    ],\n    \"domain\": \"99\",\n    \"attributes\": {\n        \"posXY\": \"99\",\n        \"posXYUnit\": \"tile\",\n        \"size\": \"99\",\n        \"sizeUnit\": \"cm\",\n        \"height\": \"99\",\n        \"heightUnit\": \"U\",\n        \"template\": \"\",\n        \"orientation\": \"front\",\n        \"vendor\": \"99\",\n        \"type\": \"99\",\n        \"model\": \"99\",\n        \"serial\": \"99\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/stray-sensors/{{StraySensorID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"stray-sensors",
								"{{StraySensorID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Patch Stray Sensor",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Abandoned-Device\",\n    \"category\": \"999\",\n    \"parentId\":\"trash\",\n    \"description\": [\n        \"Rack A01\",\n        \"The original one\",\n        \"-3/-5\\\\nA0-Z9\"\n    ],\n    \"domain\": \"99\",\n    \"attributes\": {\n        \"posXY\": \"99\",\n        \"posXYUnit\": \"tile\",\n        \"size\": \"99\",\n        \"sizeUnit\": \"cm\",\n        \"height\": \"99\",\n        \"heightUnit\": \"U\",\n        \"template\": \"\",\n        \"orientation\": \"front\",\n        \"vendor\": \"99\",\n        \"type\": \"99\",\n        \"model\": \"99\",\n        \"serial\": \"99\",\n        \"someATTR\":\"customValue\"\n    },\n    \"another\":\"one\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/stray-sensor/{{StraySensorID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"stray-sensor",
								"{{StraySensorID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Subdevice",
			"item": [
				{
					"name": "Get Subdevice",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/devices/{{SubDeviceID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"devices",
								"{{SubDeviceID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetHierarchy",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/devices/{{SubDeviceID}}/all",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"devices",
								"{{SubDeviceID}}",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get By Name",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/devices?name=",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"devices"
							],
							"query": [
								{
									"key": "name",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get By Query",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*tests[\"Successful GET\"] = responseCode.code === 200;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"tenant\"][\"name\"]*/",
									"",
									"//tests[\"Successful PUT Request\"] = ID == "
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/devices?name=SubDeviceA",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"devices"
							],
							"query": [
								{
									"key": "name",
									"value": "SubDeviceA"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Subdevice",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful POST Request\"] = responseCode.code === 201;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"data\"][\"id\"]",
									"pm.environment.set(\"SubdeviceID\", ID)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"SubDeviceA\",\n    \"id\": null,\n    \"parentId\": \"{{DeviceID}}\",\n    \"category\": \"subdevice\",\n    \"description\": [\n        \"Rack A01\",\n        \"The original one\",\n        \"-3/-5\\\\nA0-Z9\"\n    ],\n    \"domain\": \"Device DOMAIN\",\n    \"attributes\": {\n        \"posXY\": \"{\\\"x\\\":10.0,\\\"y\\\":0.0}\",\n        \"posXYUnit\": \"tile\",\n        \"posZ\": \"{\\\"x\\\":10.0,\\\"y\\\":0.0}\",\n        \"posZUnit\": \"tile\",\n        \"size\": \"{\\\"x\\\":60.0,\\\"y\\\":120.0}\",\n        \"sizeUnit\": \"cm\",\n        \"height\": \"42\",\n        \"heightUnit\": \"U\",\n        \"heightU\": \"m\",\n        \"template\": \"Some template\",\n        \"orientation\": \"front\",\n        \"vendor\": \"someVendor\",\n        \"type\": \"someType\",\n        \"model\": \"someModel\",\n        \"serial\": \"someSerial\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/devices",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Subdevice",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/devices/{{SubDeviceID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"devices",
								"{{SubDeviceID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Subdevice",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"AbandonedSubDevice\",\n    \"id\": null,\n    \"parentId\": \"{{DeviceID}}\",\n    \"description\": [\n        \"Rack A01\",\n        \"The original one\",\n        \"-3/-5\\\\nA0-Z9\"\n    ],\n    \"domain\": \"99\",\n    \"attributes\": {\n        \"posXY\": \"99\",\n        \"posXYUnit\": \"tile\",\n        \"size\": \"99\",\n        \"sizeUnit\": \"cm\",\n        \"height\": \"99\",\n        \"heightUnit\": \"U\",\n        \"template\": \"\",\n        \"orientation\": \"front\",\n        \"vendor\": \"99\",\n        \"type\": \"99\",\n        \"model\": \"99\",\n        \"serial\": \"99\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/devices/{{SubDeviceID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"devices",
								"{{SubDeviceID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Domain",
			"item": [
				{
					"name": "Get Domain",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/domains/{{DomainID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"domains",
								"{{DomainID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetHierarchy",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/domains/{{DomainID}}/all",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"domains",
								"{{DomainID}}",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Domains",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/domains",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"domains"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get By Name",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/subdevices?name=",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"subdevices"
							],
							"query": [
								{
									"key": "name",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get By Query",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*tests[\"Successful GET\"] = responseCode.code === 200;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"tenant\"][\"name\"]*/",
									"",
									"//tests[\"Successful PUT Request\"] = ID == "
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/domains?name=",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"domains"
							],
							"query": [
								{
									"key": "name",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Domain",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful POST Request\"] = responseCode.code === 201;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"data\"][\"id\"]",
									"pm.environment.set(\"DomainID\", ID)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"DOMAIN-F\",\n    \"category\": \"domain\",\n    \"description\": [\n        \"Micro Dept\"\n    ],\n    \"domain\": \"DEMO\",\n    \"attributes\": {\n        \"color\": \"FFFF\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/domains",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"domains"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Domain",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/domains/{{DomainID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"domains",
								"{{DomainID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Domain",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"DOMAINF\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/domains/63876944809b5628f2893f4d",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"domains",
								"63876944809b5628f2893f4d"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Domain",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"AbandonedSubDevice\",\n    \"id\": null,\n    \"parentId\": \"{{DeviceID}}\",\n    \"description\": [\n        \"Rack A01\",\n        \"The original one\",\n        \"-3/-5\\\\nA0-Z9\"\n    ],\n    \"domain\": \"99\",\n    \"attributes\": {\n        \"posXY\": \"99\",\n        \"posXYUnit\": \"tile\",\n        \"size\": \"99\",\n        \"sizeUnit\": \"cm\",\n        \"height\": \"99\",\n        \"heightUnit\": \"U\",\n        \"template\": \"\",\n        \"orientation\": \"front\",\n        \"vendor\": \"99\",\n        \"type\": \"99\",\n        \"model\": \"99\",\n        \"serial\": \"99\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/domains/{{DomainID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"domains",
								"{{DomainID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "(Sub)Device1",
			"item": [
				{
					"name": "Create Subdevice1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful POST Request\"] = responseCode.code === 201;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"data\"][\"id\"]",
									"pm.environment.set(\"SubDevice1ID\", ID)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"SubDevice1A\",\n    \"id\": null,\n    \"parentId\": \"{{SubDeviceID}}\",\n    \"category\": \"subdevice\",\n    \"description\": [\n        \"UNOTLIKEME\"\n    ],\n    \"domain\": \"SD1 DOMAIN\",\n    \"attributes\": {\n        \"posXY\": \"{\\\"x\\\":10.0,\\\"y\\\":0.0}\",\n        \"posXYUnit\": \"tile\",\n        \"posZ\": \"{\\\"x\\\":10.0,\\\"y\\\":0.0}\",\n        \"posZUnit\": \"tile\",\n        \"size\": \"{\\\"x\\\":60.0,\\\"y\\\":120.0}\",\n        \"sizeUnit\": \"cm\",\n        \"height\": \"42\",\n        \"heightUnit\": \"U\",\n        \"heightU\": \"m\",\n        \"template\": \"Some template\",\n        \"orientation\": \"front\",\n        \"vendor\": \"someVendor\",\n        \"type\": \"someType\",\n        \"model\": \"someModel\",\n        \"serial\": \"someSerial\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/devices",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Subdevice1",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/devices/{{SubDevice1ID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"devices",
								"{{SubDevice1ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Devices",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/devices",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Subdevice1",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/devices/{{SubDevice1ID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"devices",
								"{{SubDevice1ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Subdevice1",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"AbandonedSubDevice1\",\n    \"id\": null,\n    \"category\":\"device\",\n    \"parentId\": \"{{SubDeviceID}}\",\n    \"description\": [\n        \"SUBDEV A01\",\n        \"The original one\",\n        \"-3/-5\\\\nA0-Z9\"\n    ],\n    \"domain\": \"99\",\n    \"attributes\": {\n        \"posXY\": \"99\",\n        \"posXYUnit\": \"tile\",\n        \"size\": \"99\",\n        \"sizeUnit\": \"cm\",\n        \"height\": \"99\",\n        \"heightUnit\": \"U\",\n        \"template\": \"\",\n        \"orientation\": \"front\",\n        \"vendor\": \"99\",\n        \"type\": \"99\",\n        \"model\": \"99\",\n        \"serial\": \"99\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/devices/{{SubDevice1ID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"devices",
								"{{SubDevice1ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Patch Subdevice1 Copy",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"AbandonedSubDevice1\",\n    \"id\": null,\n    \"parentId\": \"{{SubDeviceID}}\",\n    \"description\": [\n        \"SUBDEV A01\",\n        \"The original one\",\n        \"-3/-5\\\\nA0-Z9\"\n    ],\n    \"domain\": \"99\",\n    \"attributes\": {\n        \"posXY\": \"99\",\n        \"posXYUnit\": \"tile\",\n        \"size\": \"99\",\n        \"sizeUnit\": \"cm\",\n        \"height\": \"99\",\n        \"heightUnit\": \"U\",\n        \"template\": \"\",\n        \"orientation\": \"front\",\n        \"vendor\": \"99\",\n        \"type\": \"99\",\n        \"model\": \"99\",\n        \"serial\": \"99\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/devices/{{SubDevice1ID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"devices",
								"{{SubDevice1ID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "ACs",
			"item": [
				{
					"name": "Get By Query",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*tests[\"Successful GET\"] = responseCode.code === 200;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"tenant\"][\"name\"]*/",
									"",
									"//tests[\"Successful PUT Request\"] = ID == "
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/rooms/acs?name=AquaSky01",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"rooms",
								"acs"
							],
							"query": [
								{
									"key": "name",
									"value": "AquaSky01"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create AC",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful POST Request\"] = responseCode.code === 201;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"data\"][\"id\"]",
									"pm.environment.set(\"ACID\", ID)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"TCL_2021\",\n    \"id\": null,\n    \"parentId\": \"{{RoomID}}\",\n    \"category\": \"ac\",\n    \"description\": [\n        \"TCL\"\n    ],\n    \"domain\": \"AC DOMAIN\",\n    \"attributes\": {\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/acs",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"acs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete AC",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/acs/{{ACID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"acs",
								"{{ACID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get AC",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/acs/{{ACID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"acs",
								"{{ACID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Patch AC",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"AquaSky01\",\n    \"category\": \"ac\",\n    \"description\": [\n        \"SPEED\"\n    ],\n    \"attributes\": {\n        \"new\": \"IDX\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/acs/{{ACID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"acs",
								"{{ACID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update AC",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"AquaSky01\",\n    \"id\": \"12353\",\n    \"parentId\": \"{{RoomID}}\",\n    \"category\": \"ac\",\n    \"description\": [\n        \"SPEED\"\n    ],\n    \"domain\": \"AC DOMAIN\",\n    \"attributes\": {\n        \"new\": \"IDX\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/rooms/{{RoomID}}/acs/{{ACID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"rooms",
								"{{RoomID}}",
								"acs",
								"{{ACID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Power Panels",
			"item": [
				{
					"name": "Get By Query",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/rooms/panels?category=powerpanel",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"rooms",
								"panels"
							],
							"query": [
								{
									"key": "category",
									"value": "powerpanel"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Panel",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful POST Request\"] = responseCode.code === 201;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"data\"][\"id\"]",
									"pm.environment.set(\"PanelID\", ID)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Panel A\",\n    \"id\": null,\n    \"parentId\": \"{{RoomID}}\",\n    \"category\": \"powerpanel\",\n    \"description\": [\n        \"YINGLI\"\n    ],\n    \"domain\": \"Panel DOMAIN\",\n    \"attributes\": {\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/panels",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"panels"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Panels",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful POST Request\"] = responseCode.code === 201;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"data\"][\"id\"]",
									"pm.environment.set(\"PanelID\", ID)"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/panels",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"panels"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Panel",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/panels/{{PanelID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"panels",
								"{{PanelID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Patch Panel",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Power_Panel_99\",\n    \"category\": \"SOLARpanel\",\n    \"description\": [\n        \"GRENOBLE DERELICT\"\n    ],\n    \"domain\": \"PANEL DOMAIN\",\n    \"attributes\": {\n        \"new\": \"IDX\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/panels/{{PanelID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"panels",
								"{{PanelID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Panel",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Power_Panel_99\",\n    \"category\": \"SOLARpanel\",\n    \"description\": [\n        \"GRENOBLE DERELICT\"\n    ],\n    \"domain\": \"PANEL DOMAIN\",\n    \"attributes\": {\n        \"new\": \"IDX\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/panels/{{PanelID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"panels",
								"{{PanelID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Panel",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/panels/{{PanelID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"panels",
								"{{PanelID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Cabinets",
			"item": [
				{
					"name": "Get By Query",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*tests[\"Successful GET\"] = responseCode.code === 200;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"tenant\"][\"name\"]*/",
									"",
									"//tests[\"Successful PUT Request\"] = ID == "
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/cabinets?name=TAKEUSDOWN",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"cabinets"
							],
							"query": [
								{
									"key": "name",
									"value": "TAKEUSDOWN"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Cabinet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful POST Request\"] = responseCode.code === 201;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"data\"][\"id\"]",
									"pm.environment.set(\"CabinetID\", ID)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"CabinetA\",\n  \"parentId\" : \"{{RoomID}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/cabinets",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"cabinets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Patch Cabinet",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"TAKEUSDOWN\",\n    \"customAttr\":\"customValue\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/cabinets/{{CabinetID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"cabinets",
								"{{CabinetID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Cabinet",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"TAKEUSDOWN\",\n    \"parentId\":\"{{RoomID}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/cabinets/{{CabinetID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"cabinets",
								"{{CabinetID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Cabinet",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/cabinets/{{CabinetID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"cabinets",
								"{{CabinetID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Cabinet",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/cabinets/{{CabinetID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"cabinets",
								"{{CabinetID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Cabinets",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/cabinets",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"cabinets"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Groups",
			"item": [
				{
					"name": "Get By Query",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*tests[\"Successful GET\"] = responseCode.code === 200;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"tenant\"][\"name\"]*/",
									"",
									"//tests[\"Successful PUT Request\"] = ID == "
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/rooms/groups?category=cabinet",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"rooms",
								"groups"
							],
							"query": [
								{
									"key": "category",
									"value": "cabinet"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Group",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful POST Request\"] = responseCode.code === 201;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"data\"][\"id\"]",
									"pm.environment.set(\"GroupID\", ID)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"GroupA\",\n    \"type\" : \"device\",\n    \"contents\":  []\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/groups",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Group",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/groups/{{GroupID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"groups",
								"{{GroupID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Group",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/groups/{{GroupID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"groups",
								"{{GroupID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Group",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Group909\",\n    \"parentId\" : \"{{RoomID}}\",\n    \"racks\":  []\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/groups/{{GroupID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"groups",
								"{{GroupID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Corridors",
			"item": [
				{
					"name": "Get By Query",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*tests[\"Successful GET\"] = responseCode.code === 200;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"tenant\"][\"name\"]*/",
									"",
									"//tests[\"Successful PUT Request\"] = ID == "
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/rooms/corridors?category=cabinet",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"rooms",
								"corridors"
							],
							"query": [
								{
									"key": "category",
									"value": "cabinet"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Corridor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful POST Request\"] = responseCode.code === 201;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"data\"][\"id\"]",
									"pm.environment.set(\"CorridorID\", ID)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"CorridorZ\",\n    \"parentId\" : \"{{RoomID}}\",\n    \"domain\":\"DEMO\",\n    \"temperature\": \"warm\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/corridors",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"corridors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Corridor",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/corridors/{{CorridorID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"corridors",
								"{{CorridorID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Corridor",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/corridors/{{CorridorID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"corridors",
								"{{CorridorID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Corridors",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/corridors",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"corridors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Corridor",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Corridor909\",\n    \"parentId\" : \"{{RoomID}}\",\n    \"temperature\": \"cold\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/rooms/{{RoomID}}/corridors/{{CorridorID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"rooms",
								"{{RoomID}}",
								"corridors",
								"{{CorridorID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Patch Corridor",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Corridor808\",\n    \"temperature\": \"30C\",\n    \"someVal\":null\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/corridors/{{CorridorID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"corridors",
								"{{CorridorID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Device Sensors",
			"item": [
				{
					"name": "Get By Query",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*tests[\"Successful GET\"] = responseCode.code === 200;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"tenant\"][\"name\"]*/",
									"",
									"//tests[\"Successful PUT Request\"] = ID == "
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/devices/devicesensors?category=SENSOR-D",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"devices",
								"devicesensors"
							],
							"query": [
								{
									"key": "category",
									"value": "SENSOR-D"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Patch Device Sensor",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Corridor808\",\n    \"temperature\": \"30C\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/sensors/{{DeviceSensorID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"sensors",
								"{{DeviceSensorID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Device Sensor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*tests[\"Successful GET\"] = responseCode.code === 200;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"tenant\"][\"name\"]*/",
									"",
									"//tests[\"Successful PUT Request\"] = ID == "
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/sensors/{{DeviceSensorID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"sensors",
								"{{DeviceSensorID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Sensors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*tests[\"Successful GET\"] = responseCode.code === 200;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"tenant\"][\"name\"]*/",
									"",
									"//tests[\"Successful PUT Request\"] = ID == "
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/sensors",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"sensors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Device Sensor",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Corridor909\",\n    \"parentId\" : \"{{RoomID}}\",\n    \"temperature\": \"cold\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/sensors/{{DeviceSensorID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"sensors",
								"{{DeviceSensorID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Device Sensor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful POST Request\"] = responseCode.code === 201;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"data\"][\"id\"]",
									"pm.environment.set(\"DeviceSensorID\", ID)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"DeviceSensorA\",\n    \"parentId\" : \"{{DeviceID}}\",\n    \"category\": \"SENSOR-D\",\n    \"type\": \"device\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/sensors",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"sensors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Device Sensor",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/sensors/{{DeviceSensorID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"sensors",
								"{{DeviceSensorID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Room Sensors",
			"item": [
				{
					"name": "Get By Query",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*tests[\"Successful GET\"] = responseCode.code === 200;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"tenant\"][\"name\"]*/",
									"",
									"//tests[\"Successful PUT Request\"] = ID == "
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/devices/devicesensors?category=SENSOR-D",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"devices",
								"devicesensors"
							],
							"query": [
								{
									"key": "category",
									"value": "SENSOR-D"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Room Sensor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*tests[\"Successful GET\"] = responseCode.code === 200;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"tenant\"][\"name\"]*/",
									"",
									"//tests[\"Successful PUT Request\"] = ID == "
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/sensors/{{RoomSensorID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"sensors",
								"{{RoomSensorID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Room Sensor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful POST Request\"] = responseCode.code === 201;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"data\"][\"id\"]",
									"pm.environment.set(\"RoomSensorID\", ID)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"RoomSensorLight\",\n    \"parentId\" : \"{{RoomID}}\",\n    \"category\": \"SENSOR-R\",\n    \"type\":\"room\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/sensors",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"sensors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Room Sensor",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/sensors/{{RoomSensorID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"sensors",
								"{{RoomSensorID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Patch Room Sensor",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Corridor808\",\n    \"temperature\": \"30C\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/sensors/{{RoomSensorID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"sensors",
								"{{RoomSensorID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Room Sensor",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Corridor909\",\n    \"parentId\" : \"{{RoomID}}\",\n    \"temperature\": \"cold\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/sensors/{{RoomSensorID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"sensors",
								"{{RoomSensorID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Rack Sensors",
			"item": [
				{
					"name": "Get By Query",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*tests[\"Successful GET\"] = responseCode.code === 200;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"tenant\"][\"name\"]*/",
									"",
									"//tests[\"Successful PUT Request\"] = ID == "
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/racks/racksensors?category=SENSOR-A",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"racks",
								"racksensors"
							],
							"query": [
								{
									"key": "category",
									"value": "SENSOR-A"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Rack Sensor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*tests[\"Successful GET\"] = responseCode.code === 200;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"tenant\"][\"name\"]*/",
									"",
									"//tests[\"Successful PUT Request\"] = ID == "
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/sensors/{{RackSensorID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"sensors",
								"{{RackSensorID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Rack Sensors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*tests[\"Successful GET\"] = responseCode.code === 200;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"tenant\"][\"name\"]*/",
									"",
									"//tests[\"Successful PUT Request\"] = ID == "
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/sensors",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"sensors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Rack Sensor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful POST Request\"] = responseCode.code === 201;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"data\"][\"id\"]",
									"pm.environment.set(\"RackSensorID\", ID)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"SensorA\",\n    \"parentId\" : \"{{RackID}}\",\n    \"category\": \"SENSOR-A\",\n    \"domain\": \"DEMO\",\n    \"type\":\"rack\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/sensors",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"sensors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Rack Sensor",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/sensors/{{RackSensorID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"sensors",
								"{{RackSensorID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Patch Rack Sensor",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Corridor808\",\n    \"temperature\": \"30C\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/sensors/{{RackSensorID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"sensors",
								"{{RackSensorID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Rack Sensor",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Corridor909\",\n    \"parentId\" : \"{{RoomID}}\",\n    \"temperature\": \"cold\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/sensors/{{RackSensorID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"sensors",
								"{{RackSensorID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Room-Templates",
			"item": [
				{
					"name": "Delete Room Template",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/room-templates/{{RoomTemplateID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"room-templates",
								"{{RoomTemplateID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Room Template",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/room-templates/{{RoomTemplateID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"room-templates",
								"{{RoomTemplateID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Room Templates",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/room-templates",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"room-templates"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Room Template ByQuery",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/room-templates?slug=HOTTESTDNB",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"room-templates"
							],
							"query": [
								{
									"key": "slug",
									"value": "HOTTESTDNB"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Room Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful POST Request\"] = responseCode.code === 201;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"data\"][\"slug\"]",
									"pm.environment.set(\"RoomTemplateID\", ID)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"slug\"          : \"RT1\",\n  \"axisOrientation\"   : \"+N+E\",\n  \"sizeWDHm\"      : [\"width\",\"depth\",\"height\"],\n  \"technicalArea\" : [\"width\",\"depth\",\"height\"],\n  \"reservedArea\"  : [\"width\",\"depth\",\"height\"],\n  \"separators\"    : [\n  ],\n  \"colors\"        : [\n  ],\n  \"tiles\"         : [\n  ],\n  \"aisles\"        : [\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/room-templates",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"room-templates"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Room Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful POST Request\"] = responseCode.code === 201;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"data\"][\"slug\"]",
									"pm.environment.set(\"RoomTemplateID\", ID)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"slug\"          : \"HOTTESTDNB\",\n  \"axisOrientation\"   : \"+N+W\",\n  \"sizeWDHm\"      : [],\n  \"technicalArea\" : [],\n  \"reservedArea\"  : [],\n  \"separators\"    : [\n  ],\n  \"colors\"        : [\n  ],\n  \"tiles\"         : [\n  ],\n  \"aisles\"        : [\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/room-templates/{{RoomTemplateID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"room-templates",
								"{{RoomTemplateID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH Room Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful POST Request\"] = responseCode.code === 201;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"data\"][\"slug\"]",
									"pm.environment.set(\"RoomTemplateID\", ID)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"slug\"          : \"HOTTESTDNB\",\n  \"orientation\"   : \"+N+W\",\n  \"another\":\"ONE\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/room-templates/{{RoomTemplateID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"room-templates",
								"{{RoomTemplateID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Bldg-Templates",
			"item": [
				{
					"name": "Delete BldgTemplate",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/bldg-templates/{{BldgTemplateID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"bldg-templates",
								"{{BldgTemplateID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Bldg Template",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/bldg-templates/{{BldgTemplateID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"bldg-templates",
								"{{BldgTemplateID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Bldg Templates",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/bldg-templates",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"bldg-templates"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Bldg Template ByQuery",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/bldg-templates?slug=HOTTESTDNB",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"bldg-templates"
							],
							"query": [
								{
									"key": "slug",
									"value": "HOTTESTDNB"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Bldg Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful POST Request\"] = responseCode.code === 201;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"data\"][\"slug\"]",
									"pm.environment.set(\"BldgTemplateID\", ID)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"slug\"          : \"BT3\",\n  \"category\"      : \"bldg\",\n  \"orientation\"   : \"+N+E\",\n  \"sizeWDHm\"      : [100,100,100],\n  \"vertices\":[[-19.5,5.64]]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/bldg-templates",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"bldg-templates"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Bldg Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful POST Request\"] = responseCode.code === 201;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"data\"][\"slug\"]",
									"pm.environment.set(\"BldgTemplateID\", ID)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"slug\"          : \"HOTTESTDNB\",\n  \"orientation\"   : \"+N+W\",\n  \"sizeWDHm\"      : [],\n  \"technicalArea\" : [],\n  \"reservedArea\"  : [],\n  \"separators\"    : [\n  ],\n  \"colors\"        : [\n  ],\n  \"tiles\"         : [\n  ],\n  \"aisles\"        : [\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/bldg-templates/{{BldgTemplateID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"bldg-templates",
								"{{BldgTemplateID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH Bldg Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful POST Request\"] = responseCode.code === 201;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"data\"][\"slug\"]",
									"pm.environment.set(\"BldgTemplateID\", ID)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"slug\"          : \"HOTTESTDNB\",\n  \"orientation\"   : \"+N+W\",\n  \"another\":\"ONE\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/bldg-templates/{{BldgTemplateID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"bldg-templates",
								"{{BldgTemplateID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Obj-Templates",
			"item": [
				{
					"name": "Delete Obj Template",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/obj-templates/{{RackTemplateID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"obj-templates",
								"{{RackTemplateID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Obj Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful POST Request\"] = responseCode.code === 201;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"data\"][\"slug\"]",
									"pm.environment.set(\"RackTemplateID\", ID)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"slug\"        : \"RACK1T\",\n  \"description\" : \"Rack Template 1\",\n  \"category\"    : \"rack\",\n  \"sizeWDHmm\"   : [\"width\",\"depth\",\"height\"],\n  \"fbxModel\"    : \"1\",\n  \"attributes\"  : {\n    \"type\" : \"\"\n  },\n  \"colors\"      : [\n  ],\n  \"components\"  : [\n  ],\n  \"slots\"       : [\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/obj-templates",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"obj-templates"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Obj Templates",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/obj-templates",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"obj-templates"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Obj Template",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/obj-templates/{{RackTemplateID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"obj-templates",
								"{{RackTemplateID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Obj Template ByQuery",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/obj-templates?slug=RACK2000",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"obj-templates"
							],
							"query": [
								{
									"key": "slug",
									"value": "RACK2000"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Obj Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful POST Request\"] = responseCode.code === 201;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"data\"][\"slug\"]",
									"pm.environment.set(\"RackTemplateID\", ID)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"slug\"        : \"RACK2000\",\n  \"description\" : \"Rack Template 2000\",\n  \"category\"    : \"rack\",\n  \"sizeWDHmm\"   : [],\n  \"fbxModel\"    : \"1\",\n  \"attributes\"  : {\n    \"type\" : \"\"\n  },\n  \"colors\"      : [\n  ],\n  \"components\"  : [\n  ],\n  \"slots\"       : [\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/obj-templates/{{ObjTemplateID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"obj-templates",
								"{{ObjTemplateID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Patch Obj Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful POST Request\"] = responseCode.code === 201;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"data\"][\"slug\"]",
									"pm.environment.set(\"RackTemplateID\", ID)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"slug\"        : \"RACK2000\",\n  \"description\" : \"Rack Template 2000\",\n  \"category\"    : \"rack\",\n  \"sizeWDHmm\"   : [],\n  \"fbxModel\"    : \"1\",\n  \"attributes\"  : {\n    \"type\" : \"somevale\",\n    \"another\":\"one\"\n  },\n  \"colors\"      : [\n  ],\n  \"components\"  : [\n  ],\n  \"slots\"       : [\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/obj-templates/{{ObjTemplateID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"obj-templates",
								"{{ObjTemplateID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "FBX Models",
			"item": [
				{
					"name": "Delete FBX Model",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/fbxs/{{FBXID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"fbxs",
								"{{FBXID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create FBX Model",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful POST Request\"] = responseCode.code === 201;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"data\"][\"id\"]",
									"pm.environment.set(\"FBXID\", ID)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\"        : \"FBX1\",\n  \"description\" : \"FBX JSON 1\",\n  \"category\"    : \"fbx\",\n  \"attributes\"  : {\n    \"type\" : \"\"\n  },\n  \"colors\"      : [\n  ],\n  \"components\"  : [\n  ],\n  \"slots\"       : [\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/fbxs",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"fbxs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All FBX Models",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/fbxs",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"fbxs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get FBX Model",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/fbxs/{{FBXID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"fbxs",
								"{{FBXID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get FBX Model ByQuery",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful GET Request\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/fbxs?slug=RACK2000",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"fbxs"
							],
							"query": [
								{
									"key": "slug",
									"value": "RACK2000"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update FBX Model",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful POST Request\"] = responseCode.code === 201;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"data\"][\"slug\"]",
									"pm.environment.set(\"RackTemplateID\", ID)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"slug\"        : \"RACK2000\",\n  \"description\" : \"Rack Template 2000\",\n  \"category\"    : \"rack\",\n  \"sizeWDHmm\"   : [],\n  \"fbxModel\"    : \"1\",\n  \"attributes\"  : {\n    \"type\" : \"\"\n  },\n  \"colors\"      : [\n  ],\n  \"components\"  : [\n  ],\n  \"slots\"       : [\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/fbxs/{{FBXID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"fbxs",
								"{{FBXID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Patch FBX Model",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Successful POST Request\"] = responseCode.code === 201;",
									"",
									"var data = JSON.parse(responseBody)",
									"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
									"",
									"var ID = data[\"data\"][\"slug\"]",
									"pm.environment.set(\"RackTemplateID\", ID)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"slug\"        : \"RACK2000\",\n  \"description\" : \"Rack Template 2000\",\n  \"category\"    : \"rack\",\n  \"sizeWDHmm\"   : [],\n  \"fbxModel\"    : \"1\",\n  \"attributes\"  : {\n    \"type\" : \"somevale\",\n    \"another\":\"one\"\n  },\n  \"colors\"      : [\n  ],\n  \"components\"  : [\n  ],\n  \"slots\"       : [\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/fbxs/{{FBXID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"fbxs",
								"{{FBXID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Depracated",
			"item": [
				{
					"name": "Separators",
					"item": [
						{
							"name": "Get By Query",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*tests[\"Successful GET\"] = responseCode.code === 200;",
											"",
											"var data = JSON.parse(responseBody)",
											"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
											"",
											"var ID = data[\"tenant\"][\"name\"]*/",
											"",
											"//tests[\"Successful PUT Request\"] = ID == "
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{AuthToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/rooms/separators?category=wall",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"rooms",
										"separators"
									],
									"query": [
										{
											"key": "category",
											"value": "wall"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Separator",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Successful POST Request\"] = responseCode.code === 201;",
											"",
											"var data = JSON.parse(responseBody)",
											"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
											"",
											"var ID = data[\"data\"][\"id\"]",
											"pm.environment.set(\"SeparatorID\", ID)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{AuthToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Undercover\",\n    \"id\": null,\n    \"parentId\": \"{{RoomID}}\",\n    \"category\": \"separator\",\n    \"description\": [\n        \"2008\"\n    ],\n    \"domain\": \"Sep DOMAIN\",\n    \"attributes\": {\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/separators",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"separators"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Separator",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{AuthToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/api/separators/{{SeparatorID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"separators",
										"{{SeparatorID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Separator",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{AuthToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/api/separators/{{SeparatorID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"separators",
										"{{SeparatorID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Separators",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{AuthToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/api/separators",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"separators"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Separator",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{AuthToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"EXTREME-WALL\",\n    \"id\": null,\n    \"parentId\": \"{{RoomID}}\",\n    \"category\": \"wall\",\n    \"description\": [\n        \"GRENOBLE DERELICT\"\n    ],\n    \"domain\": \"WALLDOMAIN\",\n    \"attributes\": {\n        \"new\": \"99\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/separators/{{SeparatorID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"separators",
										"{{SeparatorID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Patch Separator",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{AuthToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"EXTREME-WALL\",\n    \"attributes\":{\n        \"Ijust\":\"WalkedAway\",\n        \"newAttr\":\"no\"\n    },\n    \"another\": \"ONE\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/separators/{{SeparatorID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"separators",
										"{{SeparatorID}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Tiles",
					"item": [
						{
							"name": "Get By Query",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*tests[\"Successful GET\"] = responseCode.code === 200;",
											"",
											"var data = JSON.parse(responseBody)",
											"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
											"",
											"var ID = data[\"tenant\"][\"name\"]*/",
											"",
											"//tests[\"Successful PUT Request\"] = ID == "
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{AuthToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/rooms/tiles?category=wall",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"rooms",
										"tiles"
									],
									"query": [
										{
											"key": "category",
											"value": "wall"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Tile",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Successful POST Request\"] = responseCode.code === 201;",
											"",
											"var data = JSON.parse(responseBody)",
											"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
											"",
											"var ID = data[\"data\"][\"id\"]",
											"pm.environment.set(\"TileID\", ID)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{AuthToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"location\" : \"101,101\",\n  \"name\"     : \"TileA\",\n  \"label\"    : \"TileA\",\n  \"texture\"  : \"Smooth\",\n  \"color\"    : \"FAA\",\n  \"parentId\" : \"{{RoomID}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/tiles",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"tiles"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Tile",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{AuthToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/api/tiles/{{TileID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"tiles",
										"{{TileID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Tile",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{AuthToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/api/tiles/{{TileID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"tiles",
										"{{TileID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Patch Tile",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{AuthToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"location\" : \"82,99\",\n  \"name\"     : \"Tile-Black\",\n  \"label\"    : \"Kino\",\n  \"texture\"  : \"Smooth\",\n  \"color\"    : \"FFFFFF\",\n  \"someATTR\": \"customValue\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/tiles/{{TileID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"tiles",
										"{{TileID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Tile",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{AuthToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"location\" : \"82,99\",\n  \"name\"     : \"Tile-Black\",\n  \"label\"    : \"Kino\",\n  \"texture\"  : \"Smooth\",\n  \"color\"    : \"FFFFFF\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/tiles/{{TileID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"tiles",
										"{{TileID}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Rows",
					"item": [
						{
							"name": "Get By Query",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*tests[\"Successful GET\"] = responseCode.code === 200;",
											"",
											"var data = JSON.parse(responseBody)",
											"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
											"",
											"var ID = data[\"tenant\"][\"name\"]*/",
											"",
											"//tests[\"Successful PUT Request\"] = ID == "
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{AuthToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/rooms/rows?category=wall",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"rooms",
										"rows"
									],
									"query": [
										{
											"key": "category",
											"value": "wall"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Row",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Successful POST Request\"] = responseCode.code === 201;",
											"",
											"var data = JSON.parse(responseBody)",
											"//console.log(\"Here is what we got: \", data[\"tenant\"][\"id\"])",
											"",
											"var ID = data[\"data\"][\"id\"]",
											"pm.environment.set(\"RowID\", ID)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{AuthToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\"        : \"AisleA\",\n  \"locationY\"   : \"101,101\",\n  \"orientation\" : \"+N+E\",\n  \"parentId\" : \"{{RoomID}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/aisles",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"aisles"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Row",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{AuthToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/api/rows/{{RowID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"rows",
										"{{RowID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Row",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{AuthToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\"        : \"ROW-X\",\n  \"locationY\"   : \"82,99\",\n  \"orientation\" : \"+S+E\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/rooms/{{RoomID}}/rows/{{RowID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"rooms",
										"{{RoomID}}",
										"rows",
										"{{RowID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Row",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{AuthToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/api/rows/{{RowID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"rows",
										"{{RowID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Patch Row",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{AuthToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\"        : \"ROW-X\",\n  \"locationXYZ\"   : \"82,99\",\n  \"orientation\" : \"+S+E\",\n  \"someATTR\":\"customValue\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/rooms/{{RoomID}}/rows/{{RowID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"rooms",
										"{{RoomID}}",
										"rows",
										"{{RowID}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "StraySensorID",
			"value": "StraySensorD"
		}
	]
}