// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// sortable is an autogenerated mock type for the sortable type
type sortable struct {
	mock.Mock
}

// GetData provides a mock function with given fields:
func (_m *sortable) GetData() []interface{} {
	ret := _m.Called()

	var r0 []interface{}
	if rf, ok := ret.Get(0).(func() []interface{}); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]interface{})
		}
	}

	return r0
}

// Print provides a mock function with given fields:
func (_m *sortable) Print() {
	_m.Called()
}

type mockConstructorTestingTnewSortable interface {
	mock.TestingT
	Cleanup(func())
}

// newSortable creates a new instance of sortable. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newSortable(t mockConstructorTestingTnewSortable) *sortable {
	mock := &sortable{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
