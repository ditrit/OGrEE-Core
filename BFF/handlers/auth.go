package handlers

import (
	"ogree-bff/controllers"

	"github.com/gin-gonic/gin"
)

// swagger:operation POST /login Authentication Authenticate
// Generates a new JWT Key for the client.
// Create a new JWT Key. This can also be used to verify credentials
// The authorize and 'Try it out' buttons don't work
// ---
// produces:
// - application/json
// parameters:
//   - name: body
//     in: body
//     description: 'Mandatory: email and password.'
//     required: true
//     format: object
//     example: '{"email": "user@test.com", "password": "secret123"}'
//
// responses:
//     '200':
//         description: Authenticated
//     '400':
//         description: Bad request
//     '500':
//         description: Internal server error
func Login(c *gin.Context) {
	controllers.Post(c, "objects")
}

// swagger:operation GET /token/valid Authentication VerifyToken
// Verify if token sent in the header is valid.
// ---
// security:
//   - Bearer: []
//
// produces:
//   - application/json
//
// responses:
//		'200':
//	    	description: Token is valid.
//		'403':
//	    	description: Unauthorized
//		'500':
//	    	description: Internal server error
func ValidToken(c *gin.Context) {
	controllers.Get(c, "objects")

}

// swagger:operation POST /users/password/change Authentication ModifyUserPassword
// For logged in user to change its own password.
// ---
// security:
//   - Bearer: []
//
// produces:
//   - application/json
//
// parameters:
//   - name: body
//     in: body
//     description: 'Mandatory: currentPassword and newPassword.'
//     type: json
//     required: true
//     example: '{"currentPassword": "myOldPassword", "newPassword": "myNewPassword"}'
//
// responses:
//
//	 	'200':
//			description: Password changed
//	 	'400':
//			description: Bad request
//	 	'500':
//			description: Internal server error
func ModifyUserPassword(c *gin.Context) {
	controllers.Post(c, "objects")
}

// swagger:operation POST /users/password/reset Authentication ResetUserPassword
// Reset password after forgot.
// For user that first called forgot enpoint to change its password.
// A reset token generated by the forgot endpoint should be provided as the Authentication header.
// ---
// security:
//   - Bearer: []
//
// produces:
//   - application/json
//
// parameters:
//   - name: body
//     in: body
//     description: 'Mandatory: currentPassword and newPassword.'
//     type: json
//     required: true
//     example: '{"newPassword": "myNewPassword"}'
//
// responses:
//
//	 '200':
//		description: Password changed
//	 '400':
//		description: Bad request
//	 '500':
//		description: Internal server error
func ResetUserPassword(c *gin.Context) {
	controllers.Post(c, "objects")
}

// swagger:operation POST /users/password/forgot Authentication UserForgotPassword
// Forgot my password.
// Public endpoint to request a reset of a user's password (forgot my password).
// If the email is valid, an email with a reset token/link will be sent to the user.
// ---
// produces:
//   - application/json
//
// parameters:
//   - name: body
//     in: body
//     description: 'Mandatory: email.'
//     type: string
//     required: true
//     example: '{"email": "user@test.com"}'
//
// responses:
//
//	 '200':
//		description: request processed. If account exists, an email with a reset token is sent
//	 '400':
//		description: Bad request
//	 '500':
//		description: Internal server error
func UserForgotPassword(c *gin.Context) {
	controllers.Post(c, "objects")
}
