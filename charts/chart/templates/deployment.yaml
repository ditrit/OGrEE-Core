apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.fullnameOverride }}
  labels:
    {{- include "ogree.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "ogree.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "ogree.selectorLabels" . | nindent 8 }}
    spec:
      imagePullSecrets:
        - name: regcred
      {{- if .Values.serviceAccountName }}
      serviceAccountName: {{ .Values.serviceAccountName }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Values.fullnameOverride }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if .Values.env }}
          env:
            {{- range .Values.env }}
            - name: {{ .name | quote }}
              value: {{ .value | quote }}
            {{- end }}
          {{- end}}
          #Mount volumes needed
          {{- if or ( .Values.configmap) ( .Values.persistentVolumeClaim) }}
          volumeMounts:
          # Mount Config map
            {{- range $maps := .Values.configmap }}
            {{- range $data:= $maps.data}}
            - name: {{ $maps.name }}
              mountPath: {{ $data.mountPath}}
              subPath: {{ $data.name }}
            {{- end }}
            {{- end }}
            #Mount Volume claim
            {{- range .Values.persistentVolumeClaim }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
            {{- end }}
          {{- end }}
      #Add volume needs
      {{- if or ( .Values.configmap) ( .Values.persistentVolumeClaim) }}
      volumes:
      # Add config map
        {{- range $maps := .Values.configmap }}
        - name: {{ .name }}
          configMap:
            name: {{ .name }}
        {{- end }}
        #add volume Claim
        {{- range .Values.persistentVolumeClaim }}
        - name: {{ .name}}
          persistentVolumeClaim:
            claimName: {{ .name }}
        {{- end }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

